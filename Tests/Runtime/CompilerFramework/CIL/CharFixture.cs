/*
 * (c) 2008 MOSA - The Managed Operating System Alliance
 *
 * Licensed under the terms of the New BSD License.
 *
 * Authors:
 *  Michael Fröhlich (aka grover, <mailto:sharpos@michaelruck.de>)
 *  
 */

using System;

using MbUnit.Framework;

namespace Test.Mosa.Runtime.CompilerFramework.CLI
{
	[TestFixture]
	[Importance(Importance.Critical)]
	[Category(@"Basic types")]
	[Description(@"Tests support for the basic type System.Char")]
	public class CharFixture : RuntimeFixture
	{
		private readonly ArithmeticInstructionTestRunner<int, char> arithmeticTests = new ArithmeticInstructionTestRunner<int, char>
		{
			ExpectedTypeName = @"int",
			TypeName = @"char"
		};

		private readonly BinaryLogicInstructionTestRunner<int, char, char> logicTests = new BinaryLogicInstructionTestRunner<int, char, char>
		{
			ExpectedTypeName = @"int",
			TypeName = @"char",
			ShiftTypeName = @"char",
			IncludeComp = false,
			IncludeNot = false
		};

		private readonly ComparisonInstructionTestRunner<char> comparisonTests = new ComparisonInstructionTestRunner<char>
		{
			TypeName = @"char"
		};

		private readonly SZArrayInstructionTestRunner<char> arrayTests = new SZArrayInstructionTestRunner<char>
		{
			TypeName = @"char"
		};

		#region Add

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Add(char a, char b)
		{
			this.arithmeticTests.Add((a + b), a, b);
		}

		#endregion // Add

		#region Sub

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Sub(char a, char b)
		{
			this.arithmeticTests.Sub((a - b), a, b);
		}

		#endregion // Sub

		#region Mul

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Mul(char a, char b)
		{
			this.arithmeticTests.Mul((a * b), a, b);
		}

		#endregion // Mul

		#region Div

		[Row(Char.MinValue, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Div(char a, char b)
		{
			this.arithmeticTests.Div((a / b), a, b);
		}

		#endregion // Div

		#region Rem

		[Row(Char.MinValue, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue, ExpectedException = typeof(DivideByZeroException))]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Rem(char a, char b)
		{
			this.arithmeticTests.Rem((a % b), a, b);
		}

		#endregion // Rem

		#region Ret

		[Row(Char.MinValue)]
		[Row(Char.MaxValue)]
		[Row(1)]
		[Row(13)]
		[Row('0')]
		[Row('9')]
		[Row('A')]
		[Row('Z')]
		[Row('a')]
		[Row('z')]
		[Row(' ')]
		[Row('\n')]
		[Row('\t')]
		[Row(127)]
		[Row(128)]
		[Row(255)]
		[Row(256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Ret(char value)
		{
			this.arithmeticTests.Ret(value);
		}

		#endregion // Ret

		#region And

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void And(char first, char second)
		{
			this.logicTests.And((char)(first & second), first, second);
		}

		#endregion // And

		#region Or

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Or(char first, char second)
		{
			this.logicTests.Or((char)(first | second), first, second);
		}

		#endregion // Or

		#region Xor

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Xor(char first, char second)
		{
			this.logicTests.Xor((char)(first ^ second), first, second);
		}

		#endregion // Xor

		#region Shl

		[Row(Char.MinValue, 0)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 2)]
		[Row(Char.MinValue, 3)]
		[Row(Char.MinValue, 4)]
		[Row(Char.MinValue, 5)]
		[Row(Char.MinValue, 6)]
		[Row(Char.MinValue, 7)]
		[Row(Char.MinValue, 8)]
		[Row(Char.MinValue, 9)]
		[Row(Char.MinValue, 10)]
		[Row(Char.MinValue, 11)]
		[Row(Char.MinValue, 12)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, 14)]
		[Row(Char.MinValue, 15)]
		[Row(Char.MaxValue, 0)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 2)]
		[Row(Char.MaxValue, 3)]
		[Row(Char.MaxValue, 4)]
		[Row(Char.MaxValue, 5)]
		[Row(Char.MaxValue, 6)]
		[Row(Char.MaxValue, 7)]
		[Row(Char.MaxValue, 8)]
		[Row(Char.MaxValue, 9)]
		[Row(Char.MaxValue, 10)]
		[Row(Char.MaxValue, 11)]
		[Row(Char.MaxValue, 12)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, 14)]
		[Row(Char.MaxValue, 15)]
		[Row(1, 0)]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, 3)]
		[Row(1, 4)]
		[Row(1, 5)]
		[Row(1, 6)]
		[Row(1, 7)]
		[Row(1, 8)]
		[Row(1, 9)]
		[Row(1, 10)]
		[Row(1, 11)]
		[Row(1, 12)]
		[Row(1, 13)]
		[Row(1, 14)]
		[Row(1, 15)]
		[Row(13, 0)]
		[Row(13, 1)]
		[Row(13, 2)]
		[Row(13, 3)]
		[Row(13, 4)]
		[Row(13, 5)]
		[Row(13, 6)]
		[Row(13, 7)]
		[Row(13, 8)]
		[Row(13, 9)]
		[Row(13, 10)]
		[Row(13, 11)]
		[Row(13, 12)]
		[Row(13, 13)]
		[Row(13, 14)]
		[Row(13, 15)]
		[Row('0', 0)]
		[Row('0', 1)]
		[Row('0', 2)]
		[Row('0', 3)]
		[Row('0', 4)]
		[Row('0', 5)]
		[Row('0', 6)]
		[Row('0', 7)]
		[Row('0', 8)]
		[Row('0', 9)]
		[Row('0', 10)]
		[Row('0', 11)]
		[Row('0', 12)]
		[Row('0', 13)]
		[Row('0', 14)]
		[Row('0', 15)]
		[Row('9', 0)]
		[Row('9', 1)]
		[Row('9', 2)]
		[Row('9', 3)]
		[Row('9', 4)]
		[Row('9', 5)]
		[Row('9', 6)]
		[Row('9', 7)]
		[Row('9', 8)]
		[Row('9', 9)]
		[Row('9', 10)]
		[Row('9', 11)]
		[Row('9', 12)]
		[Row('9', 13)]
		[Row('9', 14)]
		[Row('9', 15)]
		[Row('A', 0)]
		[Row('A', 1)]
		[Row('A', 2)]
		[Row('A', 3)]
		[Row('A', 4)]
		[Row('A', 5)]
		[Row('A', 6)]
		[Row('A', 7)]
		[Row('A', 8)]
		[Row('A', 9)]
		[Row('A', 10)]
		[Row('A', 11)]
		[Row('A', 12)]
		[Row('A', 13)]
		[Row('A', 14)]
		[Row('A', 15)]
		[Row('Z', 0)]
		[Row('Z', 1)]
		[Row('Z', 2)]
		[Row('Z', 3)]
		[Row('Z', 4)]
		[Row('Z', 5)]
		[Row('Z', 6)]
		[Row('Z', 7)]
		[Row('Z', 8)]
		[Row('Z', 9)]
		[Row('Z', 10)]
		[Row('Z', 11)]
		[Row('Z', 12)]
		[Row('Z', 13)]
		[Row('Z', 14)]
		[Row('Z', 15)]
		[Row('a', 0)]
		[Row('a', 1)]
		[Row('a', 2)]
		[Row('a', 3)]
		[Row('a', 4)]
		[Row('a', 5)]
		[Row('a', 6)]
		[Row('a', 7)]
		[Row('a', 8)]
		[Row('a', 9)]
		[Row('a', 10)]
		[Row('a', 11)]
		[Row('a', 12)]
		[Row('a', 13)]
		[Row('a', 14)]
		[Row('a', 15)]
		[Row('z', 0)]
		[Row('z', 1)]
		[Row('z', 2)]
		[Row('z', 3)]
		[Row('z', 4)]
		[Row('z', 5)]
		[Row('z', 6)]
		[Row('z', 7)]
		[Row('z', 8)]
		[Row('z', 9)]
		[Row('z', 10)]
		[Row('z', 11)]
		[Row('z', 12)]
		[Row('z', 13)]
		[Row('z', 14)]
		[Row('z', 15)]
		[Row(' ', 0)]
		[Row(' ', 1)]
		[Row(' ', 2)]
		[Row(' ', 3)]
		[Row(' ', 4)]
		[Row(' ', 5)]
		[Row(' ', 6)]
		[Row(' ', 7)]
		[Row(' ', 8)]
		[Row(' ', 9)]
		[Row(' ', 10)]
		[Row(' ', 11)]
		[Row(' ', 12)]
		[Row(' ', 13)]
		[Row(' ', 14)]
		[Row(' ', 15)]
		[Row('\n', 0)]
		[Row('\n', 1)]
		[Row('\n', 2)]
		[Row('\n', 3)]
		[Row('\n', 4)]
		[Row('\n', 5)]
		[Row('\n', 6)]
		[Row('\n', 7)]
		[Row('\n', 8)]
		[Row('\n', 9)]
		[Row('\n', 10)]
		[Row('\n', 11)]
		[Row('\n', 12)]
		[Row('\n', 13)]
		[Row('\n', 14)]
		[Row('\n', 15)]
		[Row('\t', 0)]
		[Row('\t', 1)]
		[Row('\t', 2)]
		[Row('\t', 3)]
		[Row('\t', 4)]
		[Row('\t', 5)]
		[Row('\t', 6)]
		[Row('\t', 7)]
		[Row('\t', 8)]
		[Row('\t', 9)]
		[Row('\t', 10)]
		[Row('\t', 11)]
		[Row('\t', 12)]
		[Row('\t', 13)]
		[Row('\t', 14)]
		[Row('\t', 15)]
		[Row(127, 0)]
		[Row(127, 1)]
		[Row(127, 2)]
		[Row(127, 3)]
		[Row(127, 4)]
		[Row(127, 5)]
		[Row(127, 6)]
		[Row(127, 7)]
		[Row(127, 8)]
		[Row(127, 9)]
		[Row(127, 10)]
		[Row(127, 11)]
		[Row(127, 12)]
		[Row(127, 13)]
		[Row(127, 14)]
		[Row(127, 15)]
		[Row(128, 0)]
		[Row(128, 1)]
		[Row(128, 2)]
		[Row(128, 3)]
		[Row(128, 4)]
		[Row(128, 5)]
		[Row(128, 6)]
		[Row(128, 7)]
		[Row(128, 8)]
		[Row(128, 9)]
		[Row(128, 10)]
		[Row(128, 11)]
		[Row(128, 12)]
		[Row(128, 13)]
		[Row(128, 14)]
		[Row(128, 15)]
		[Row(255, 0)]
		[Row(255, 1)]
		[Row(255, 2)]
		[Row(255, 3)]
		[Row(255, 4)]
		[Row(255, 5)]
		[Row(255, 6)]
		[Row(255, 7)]
		[Row(255, 8)]
		[Row(255, 9)]
		[Row(255, 10)]
		[Row(255, 11)]
		[Row(255, 12)]
		[Row(255, 13)]
		[Row(255, 14)]
		[Row(255, 15)]
		[Row(256, 0)]
		[Row(256, 1)]
		[Row(256, 2)]
		[Row(256, 3)]
		[Row(256, 4)]
		[Row(256, 5)]
		[Row(256, 6)]
		[Row(256, 7)]
		[Row(256, 8)]
		[Row(256, 9)]
		[Row(256, 10)]
		[Row(256, 11)]
		[Row(256, 12)]
		[Row(256, 13)]
		[Row(256, 14)]
		[Row(256, 15)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Shl(char first, char second)
		{
			this.logicTests.Shl((int)(first << second), first, second);
		}

		#endregion // Shl

		#region Shr

		[Row(Char.MinValue, 0)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 2)]
		[Row(Char.MinValue, 3)]
		[Row(Char.MinValue, 4)]
		[Row(Char.MinValue, 5)]
		[Row(Char.MinValue, 6)]
		[Row(Char.MinValue, 7)]
		[Row(Char.MinValue, 8)]
		[Row(Char.MinValue, 9)]
		[Row(Char.MinValue, 10)]
		[Row(Char.MinValue, 11)]
		[Row(Char.MinValue, 12)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, 14)]
		[Row(Char.MinValue, 15)]
		[Row(Char.MaxValue, 0)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 2)]
		[Row(Char.MaxValue, 3)]
		[Row(Char.MaxValue, 4)]
		[Row(Char.MaxValue, 5)]
		[Row(Char.MaxValue, 6)]
		[Row(Char.MaxValue, 7)]
		[Row(Char.MaxValue, 8)]
		[Row(Char.MaxValue, 9)]
		[Row(Char.MaxValue, 10)]
		[Row(Char.MaxValue, 11)]
		[Row(Char.MaxValue, 12)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, 14)]
		[Row(Char.MaxValue, 15)]
		[Row(1, 0)]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, 3)]
		[Row(1, 4)]
		[Row(1, 5)]
		[Row(1, 6)]
		[Row(1, 7)]
		[Row(1, 8)]
		[Row(1, 9)]
		[Row(1, 10)]
		[Row(1, 11)]
		[Row(1, 12)]
		[Row(1, 13)]
		[Row(1, 14)]
		[Row(1, 15)]
		[Row(13, 0)]
		[Row(13, 1)]
		[Row(13, 2)]
		[Row(13, 3)]
		[Row(13, 4)]
		[Row(13, 5)]
		[Row(13, 6)]
		[Row(13, 7)]
		[Row(13, 8)]
		[Row(13, 9)]
		[Row(13, 10)]
		[Row(13, 11)]
		[Row(13, 12)]
		[Row(13, 13)]
		[Row(13, 14)]
		[Row(13, 15)]
		[Row('0', 0)]
		[Row('0', 1)]
		[Row('0', 2)]
		[Row('0', 3)]
		[Row('0', 4)]
		[Row('0', 5)]
		[Row('0', 6)]
		[Row('0', 7)]
		[Row('0', 8)]
		[Row('0', 9)]
		[Row('0', 10)]
		[Row('0', 11)]
		[Row('0', 12)]
		[Row('0', 13)]
		[Row('0', 14)]
		[Row('0', 15)]
		[Row('9', 0)]
		[Row('9', 1)]
		[Row('9', 2)]
		[Row('9', 3)]
		[Row('9', 4)]
		[Row('9', 5)]
		[Row('9', 6)]
		[Row('9', 7)]
		[Row('9', 8)]
		[Row('9', 9)]
		[Row('9', 10)]
		[Row('9', 11)]
		[Row('9', 12)]
		[Row('9', 13)]
		[Row('9', 14)]
		[Row('9', 15)]
		[Row('A', 0)]
		[Row('A', 1)]
		[Row('A', 2)]
		[Row('A', 3)]
		[Row('A', 4)]
		[Row('A', 5)]
		[Row('A', 6)]
		[Row('A', 7)]
		[Row('A', 8)]
		[Row('A', 9)]
		[Row('A', 10)]
		[Row('A', 11)]
		[Row('A', 12)]
		[Row('A', 13)]
		[Row('A', 14)]
		[Row('A', 15)]
		[Row('Z', 0)]
		[Row('Z', 1)]
		[Row('Z', 2)]
		[Row('Z', 3)]
		[Row('Z', 4)]
		[Row('Z', 5)]
		[Row('Z', 6)]
		[Row('Z', 7)]
		[Row('Z', 8)]
		[Row('Z', 9)]
		[Row('Z', 10)]
		[Row('Z', 11)]
		[Row('Z', 12)]
		[Row('Z', 13)]
		[Row('Z', 14)]
		[Row('Z', 15)]
		[Row('a', 0)]
		[Row('a', 1)]
		[Row('a', 2)]
		[Row('a', 3)]
		[Row('a', 4)]
		[Row('a', 5)]
		[Row('a', 6)]
		[Row('a', 7)]
		[Row('a', 8)]
		[Row('a', 9)]
		[Row('a', 10)]
		[Row('a', 11)]
		[Row('a', 12)]
		[Row('a', 13)]
		[Row('a', 14)]
		[Row('a', 15)]
		[Row('z', 0)]
		[Row('z', 1)]
		[Row('z', 2)]
		[Row('z', 3)]
		[Row('z', 4)]
		[Row('z', 5)]
		[Row('z', 6)]
		[Row('z', 7)]
		[Row('z', 8)]
		[Row('z', 9)]
		[Row('z', 10)]
		[Row('z', 11)]
		[Row('z', 12)]
		[Row('z', 13)]
		[Row('z', 14)]
		[Row('z', 15)]
		[Row(' ', 0)]
		[Row(' ', 1)]
		[Row(' ', 2)]
		[Row(' ', 3)]
		[Row(' ', 4)]
		[Row(' ', 5)]
		[Row(' ', 6)]
		[Row(' ', 7)]
		[Row(' ', 8)]
		[Row(' ', 9)]
		[Row(' ', 10)]
		[Row(' ', 11)]
		[Row(' ', 12)]
		[Row(' ', 13)]
		[Row(' ', 14)]
		[Row(' ', 15)]
		[Row('\n', 0)]
		[Row('\n', 1)]
		[Row('\n', 2)]
		[Row('\n', 3)]
		[Row('\n', 4)]
		[Row('\n', 5)]
		[Row('\n', 6)]
		[Row('\n', 7)]
		[Row('\n', 8)]
		[Row('\n', 9)]
		[Row('\n', 10)]
		[Row('\n', 11)]
		[Row('\n', 12)]
		[Row('\n', 13)]
		[Row('\n', 14)]
		[Row('\n', 15)]
		[Row('\t', 0)]
		[Row('\t', 1)]
		[Row('\t', 2)]
		[Row('\t', 3)]
		[Row('\t', 4)]
		[Row('\t', 5)]
		[Row('\t', 6)]
		[Row('\t', 7)]
		[Row('\t', 8)]
		[Row('\t', 9)]
		[Row('\t', 10)]
		[Row('\t', 11)]
		[Row('\t', 12)]
		[Row('\t', 13)]
		[Row('\t', 14)]
		[Row('\t', 15)]
		[Row(127, 0)]
		[Row(127, 1)]
		[Row(127, 2)]
		[Row(127, 3)]
		[Row(127, 4)]
		[Row(127, 5)]
		[Row(127, 6)]
		[Row(127, 7)]
		[Row(127, 8)]
		[Row(127, 9)]
		[Row(127, 10)]
		[Row(127, 11)]
		[Row(127, 12)]
		[Row(127, 13)]
		[Row(127, 14)]
		[Row(127, 15)]
		[Row(128, 0)]
		[Row(128, 1)]
		[Row(128, 2)]
		[Row(128, 3)]
		[Row(128, 4)]
		[Row(128, 5)]
		[Row(128, 6)]
		[Row(128, 7)]
		[Row(128, 8)]
		[Row(128, 9)]
		[Row(128, 10)]
		[Row(128, 11)]
		[Row(128, 12)]
		[Row(128, 13)]
		[Row(128, 14)]
		[Row(128, 15)]
		[Row(255, 0)]
		[Row(255, 1)]
		[Row(255, 2)]
		[Row(255, 3)]
		[Row(255, 4)]
		[Row(255, 5)]
		[Row(255, 6)]
		[Row(255, 7)]
		[Row(255, 8)]
		[Row(255, 9)]
		[Row(255, 10)]
		[Row(255, 11)]
		[Row(255, 12)]
		[Row(255, 13)]
		[Row(255, 14)]
		[Row(255, 15)]
		[Row(256, 0)]
		[Row(256, 1)]
		[Row(256, 2)]
		[Row(256, 3)]
		[Row(256, 4)]
		[Row(256, 5)]
		[Row(256, 6)]
		[Row(256, 7)]
		[Row(256, 8)]
		[Row(256, 9)]
		[Row(256, 10)]
		[Row(256, 11)]
		[Row(256, 12)]
		[Row(256, 13)]
		[Row(256, 14)]
		[Row(256, 15)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Shr(char first, char second)
		{
			this.logicTests.Shr((int)(first >> second), first, second);
		}

		#endregion // Shr

		#region Ceq

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Ceq(char first, char second)
		{
			this.comparisonTests.Ceq((first == second), first, second);
		}

		#endregion // Ceq

		#region Cgt

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Cgt(char first, char second)
		{
			this.comparisonTests.Cgt((first > second), first, second);
		}

		#endregion // Cgt

		#region Clt

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Clt(char first, char second)
		{
			this.comparisonTests.Clt((first < second), first, second);
		}

		#endregion // Clt

		#region Cge

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Cge(char first, char second)
		{
			this.comparisonTests.Cge((first >= second), first, second);
		}

		#endregion // Cge

		#region Cle

		[Row(Char.MinValue, Char.MinValue)]
		[Row(Char.MinValue, Char.MaxValue)]
		[Row(Char.MinValue, 1)]
		[Row(Char.MinValue, 13)]
		[Row(Char.MinValue, '0')]
		[Row(Char.MinValue, '9')]
		[Row(Char.MinValue, 'A')]
		[Row(Char.MinValue, 'Z')]
		[Row(Char.MinValue, 'a')]
		[Row(Char.MinValue, 'z')]
		[Row(Char.MinValue, ' ')]
		[Row(Char.MinValue, '\n')]
		[Row(Char.MinValue, '\t')]
		[Row(Char.MinValue, 127)]
		[Row(Char.MinValue, 128)]
		[Row(Char.MinValue, 255)]
		[Row(Char.MinValue, 256)]
		[Row(Char.MaxValue, Char.MinValue)]
		[Row(Char.MaxValue, Char.MaxValue)]
		[Row(Char.MaxValue, 1)]
		[Row(Char.MaxValue, 13)]
		[Row(Char.MaxValue, '0')]
		[Row(Char.MaxValue, '9')]
		[Row(Char.MaxValue, 'A')]
		[Row(Char.MaxValue, 'Z')]
		[Row(Char.MaxValue, 'a')]
		[Row(Char.MaxValue, 'z')]
		[Row(Char.MaxValue, ' ')]
		[Row(Char.MaxValue, '\n')]
		[Row(Char.MaxValue, '\t')]
		[Row(Char.MaxValue, 127)]
		[Row(Char.MaxValue, 128)]
		[Row(Char.MaxValue, 255)]
		[Row(Char.MaxValue, 256)]
		[Row(1, Char.MinValue)]
		[Row(1, Char.MaxValue)]
		[Row(1, 1)]
		[Row(1, 13)]
		[Row(1, '0')]
		[Row(1, '9')]
		[Row(1, 'A')]
		[Row(1, 'Z')]
		[Row(1, 'a')]
		[Row(1, 'z')]
		[Row(1, ' ')]
		[Row(1, '\n')]
		[Row(1, '\t')]
		[Row(1, 127)]
		[Row(1, 128)]
		[Row(1, 255)]
		[Row(1, 256)]
		[Row(13, Char.MinValue)]
		[Row(13, Char.MaxValue)]
		[Row(13, 1)]
		[Row(13, 13)]
		[Row(13, '0')]
		[Row(13, '9')]
		[Row(13, 'A')]
		[Row(13, 'Z')]
		[Row(13, 'a')]
		[Row(13, 'z')]
		[Row(13, ' ')]
		[Row(13, '\n')]
		[Row(13, '\t')]
		[Row(13, 127)]
		[Row(13, 128)]
		[Row(13, 255)]
		[Row(13, 256)]
		[Row('0', Char.MinValue)]
		[Row('0', Char.MaxValue)]
		[Row('0', 1)]
		[Row('0', 13)]
		[Row('0', '0')]
		[Row('0', '9')]
		[Row('0', 'A')]
		[Row('0', 'Z')]
		[Row('0', 'a')]
		[Row('0', 'z')]
		[Row('0', ' ')]
		[Row('0', '\n')]
		[Row('0', '\t')]
		[Row('0', 127)]
		[Row('0', 128)]
		[Row('0', 255)]
		[Row('0', 256)]
		[Row('9', Char.MinValue)]
		[Row('9', Char.MaxValue)]
		[Row('9', 1)]
		[Row('9', 13)]
		[Row('9', '0')]
		[Row('9', '9')]
		[Row('9', 'A')]
		[Row('9', 'Z')]
		[Row('9', 'a')]
		[Row('9', 'z')]
		[Row('9', ' ')]
		[Row('9', '\n')]
		[Row('9', '\t')]
		[Row('9', 127)]
		[Row('9', 128)]
		[Row('9', 255)]
		[Row('9', 256)]
		[Row('A', Char.MinValue)]
		[Row('A', Char.MaxValue)]
		[Row('A', 1)]
		[Row('A', 13)]
		[Row('A', '0')]
		[Row('A', '9')]
		[Row('A', 'A')]
		[Row('A', 'Z')]
		[Row('A', 'a')]
		[Row('A', 'z')]
		[Row('A', ' ')]
		[Row('A', '\n')]
		[Row('A', '\t')]
		[Row('A', 127)]
		[Row('A', 128)]
		[Row('A', 255)]
		[Row('A', 256)]
		[Row('Z', Char.MinValue)]
		[Row('Z', Char.MaxValue)]
		[Row('Z', 1)]
		[Row('Z', 13)]
		[Row('Z', '0')]
		[Row('Z', '9')]
		[Row('Z', 'A')]
		[Row('Z', 'Z')]
		[Row('Z', 'a')]
		[Row('Z', 'z')]
		[Row('Z', ' ')]
		[Row('Z', '\n')]
		[Row('Z', '\t')]
		[Row('Z', 127)]
		[Row('Z', 128)]
		[Row('Z', 255)]
		[Row('Z', 256)]
		[Row('a', Char.MinValue)]
		[Row('a', Char.MaxValue)]
		[Row('a', 1)]
		[Row('a', 13)]
		[Row('a', '0')]
		[Row('a', '9')]
		[Row('a', 'A')]
		[Row('a', 'Z')]
		[Row('a', 'a')]
		[Row('a', 'z')]
		[Row('a', ' ')]
		[Row('a', '\n')]
		[Row('a', '\t')]
		[Row('a', 127)]
		[Row('a', 128)]
		[Row('a', 255)]
		[Row('a', 256)]
		[Row('z', Char.MinValue)]
		[Row('z', Char.MaxValue)]
		[Row('z', 1)]
		[Row('z', 13)]
		[Row('z', '0')]
		[Row('z', '9')]
		[Row('z', 'A')]
		[Row('z', 'Z')]
		[Row('z', 'a')]
		[Row('z', 'z')]
		[Row('z', ' ')]
		[Row('z', '\n')]
		[Row('z', '\t')]
		[Row('z', 127)]
		[Row('z', 128)]
		[Row('z', 255)]
		[Row('z', 256)]
		[Row(' ', Char.MinValue)]
		[Row(' ', Char.MaxValue)]
		[Row(' ', 1)]
		[Row(' ', 13)]
		[Row(' ', '0')]
		[Row(' ', '9')]
		[Row(' ', 'A')]
		[Row(' ', 'Z')]
		[Row(' ', 'a')]
		[Row(' ', 'z')]
		[Row(' ', ' ')]
		[Row(' ', '\n')]
		[Row(' ', '\t')]
		[Row(' ', 127)]
		[Row(' ', 128)]
		[Row(' ', 255)]
		[Row(' ', 256)]
		[Row('\n', Char.MinValue)]
		[Row('\n', Char.MaxValue)]
		[Row('\n', 1)]
		[Row('\n', 13)]
		[Row('\n', '0')]
		[Row('\n', '9')]
		[Row('\n', 'A')]
		[Row('\n', 'Z')]
		[Row('\n', 'a')]
		[Row('\n', 'z')]
		[Row('\n', ' ')]
		[Row('\n', '\n')]
		[Row('\n', '\t')]
		[Row('\n', 127)]
		[Row('\n', 128)]
		[Row('\n', 255)]
		[Row('\n', 256)]
		[Row('\t', Char.MinValue)]
		[Row('\t', Char.MaxValue)]
		[Row('\t', 1)]
		[Row('\t', 13)]
		[Row('\t', '0')]
		[Row('\t', '9')]
		[Row('\t', 'A')]
		[Row('\t', 'Z')]
		[Row('\t', 'a')]
		[Row('\t', 'z')]
		[Row('\t', ' ')]
		[Row('\t', '\n')]
		[Row('\t', '\t')]
		[Row('\t', 127)]
		[Row('\t', 128)]
		[Row('\t', 255)]
		[Row('\t', 256)]
		[Row(127, Char.MinValue)]
		[Row(127, Char.MaxValue)]
		[Row(127, 1)]
		[Row(127, 13)]
		[Row(127, '0')]
		[Row(127, '9')]
		[Row(127, 'A')]
		[Row(127, 'Z')]
		[Row(127, 'a')]
		[Row(127, 'z')]
		[Row(127, ' ')]
		[Row(127, '\n')]
		[Row(127, '\t')]
		[Row(127, 127)]
		[Row(127, 128)]
		[Row(127, 255)]
		[Row(127, 256)]
		[Row(128, Char.MinValue)]
		[Row(128, Char.MaxValue)]
		[Row(128, 1)]
		[Row(128, 13)]
		[Row(128, '0')]
		[Row(128, '9')]
		[Row(128, 'A')]
		[Row(128, 'Z')]
		[Row(128, 'a')]
		[Row(128, 'z')]
		[Row(128, ' ')]
		[Row(128, '\n')]
		[Row(128, '\t')]
		[Row(128, 127)]
		[Row(128, 128)]
		[Row(128, 255)]
		[Row(128, 256)]
		[Row(255, Char.MinValue)]
		[Row(255, Char.MaxValue)]
		[Row(255, 1)]
		[Row(255, 13)]
		[Row(255, '0')]
		[Row(255, '9')]
		[Row(255, 'A')]
		[Row(255, 'Z')]
		[Row(255, 'a')]
		[Row(255, 'z')]
		[Row(255, ' ')]
		[Row(255, '\n')]
		[Row(255, '\t')]
		[Row(255, 127)]
		[Row(255, 128)]
		[Row(255, 255)]
		[Row(255, 256)]
		[Row(256, Char.MinValue)]
		[Row(256, Char.MaxValue)]
		[Row(256, 1)]
		[Row(256, 13)]
		[Row(256, '0')]
		[Row(256, '9')]
		[Row(256, 'A')]
		[Row(256, 'Z')]
		[Row(256, 'a')]
		[Row(256, 'z')]
		[Row(256, ' ')]
		[Row(256, '\n')]
		[Row(256, '\t')]
		[Row(256, 127)]
		[Row(256, 128)]
		[Row(256, 255)]
		[Row(256, 256)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Cle(char first, char second)
		{
			this.comparisonTests.Cle((first <= second), first, second);
		}

		#endregion // Cle

		#region Newarr

		[Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
		public void Newarr()
		{
			this.arrayTests.Newarr();
		}

		#endregion // Newarr

		#region Ldlen

		[Row(0)]
		[Row(1)]
		[Row(10)]
		[Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
		public void Ldlen(int length)
		{
			this.arrayTests.Ldlen(length);
		}

		#endregion // Ldlen

		#region Stelem

		[Row(0, Char.MinValue)]
		[Row(0, 1)]
		[Row(0, Char.MaxValue)]
		[Row(3, Char.MinValue)]
		[Row(6, 1)]
		[Row(2, Char.MaxValue)]
		[Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
		public void Stelem(int index, char value)
		{
			this.arrayTests.Stelem(index, value);
		}

		#endregion // Stelem

		#region Ldelem

		[Row(0, Char.MinValue)]
		[Row(0, 1)]
		[Row(0, Char.MaxValue)]
		[Row(3, Char.MinValue)]
		[Row(6, 1)]
		[Row(2, Char.MaxValue)]
		[Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
		public void Ldelem(int index, char value)
		{
			this.arrayTests.Ldelem(index, value);
		}

		#endregion // Ldelem

		#region Ldelema

		[Row(0, Char.MinValue)]
		[Row(0, 1)]
		[Row(0, Char.MaxValue)]
		[Row(3, Char.MinValue)]
		[Row(6, 1)]
		[Row(2, Char.MaxValue)]
		[Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
		public void Ldelema(int index, char value)
		{
			this.arrayTests.Ldelema(index, value);
		}

		#endregion // Ldelema
	}
}
