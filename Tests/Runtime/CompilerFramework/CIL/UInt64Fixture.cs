/*
 * (c) 2008 MOSA - The Managed Operating System Alliance
 *
 * Licensed under the terms of the New BSD License.
 *
 * Authors:
 *  Michael Fröhlich (aka grover, <mailto:sharpos@michaelruck.de>)
 *  
 */

using System;

using MbUnit.Framework;

namespace Test.Mosa.Runtime.CompilerFramework.CLI
{
    [TestFixture]
    [Importance(Importance.Critical)]
    [Category(@"Basic types")]
    [Description(@"Tests support for the basic type System.UInt64")]
    public class UInt64Fixture : RuntimeFixture
    {
        private readonly ArithmeticInstructionTestRunner<ulong, ulong> arithmeticTests = new ArithmeticInstructionTestRunner<ulong, ulong>
        {
            ExpectedTypeName = @"ulong",
            TypeName = @"ulong",
            IncludeNeg = false
        };

		private readonly BinaryLogicInstructionTestRunner<ulong, ulong, int> logicTests = new BinaryLogicInstructionTestRunner<ulong, ulong, int>
		{
			ExpectedTypeName = @"ulong",
			TypeName = @"ulong",
			ShiftTypeName = @"int",
			IncludeNot = false,
		};

        private readonly ComparisonInstructionTestRunner<ulong> comparisonTests = new ComparisonInstructionTestRunner<ulong>
        {
            TypeName = @"ulong"
        };

        private readonly SZArrayInstructionTestRunner<ulong> arrayTests = new SZArrayInstructionTestRunner<ulong>
        {
            TypeName = @"ulong"
        };

		#region Add

		[Row(0, 0)]
		[Row(0, 1)]
		[Row(0, 2)]
		[Row(0, UInt64.MaxValue)]
		[Row(0, UInt64.MaxValue - 1)]
		[Row(0, UInt32.MaxValue)]
		[Row(0, UInt32.MaxValue - 1)]
		[Row(0, 17)]
		[Row(0, 123)]
		[Row(1, 0)]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, UInt64.MaxValue)]
		[Row(1, UInt64.MaxValue - 1)]
		[Row(1, UInt32.MaxValue)]
		[Row(1, UInt32.MaxValue - 1)]
		[Row(1, 17)]
		[Row(1, 123)]
		[Row(2, 0)]
		[Row(2, 1)]
		[Row(2, 2)]
		[Row(2, UInt64.MaxValue)]
		[Row(2, UInt64.MaxValue - 1)]
		[Row(2, UInt32.MaxValue)]
		[Row(2, UInt32.MaxValue - 1)]
		[Row(2, 17)]
		[Row(2, 123)]
		[Row(UInt64.MaxValue, 0)]
		[Row(UInt64.MaxValue, 1)]
		[Row(UInt64.MaxValue, 2)]
		[Row(UInt64.MaxValue, UInt64.MaxValue)]
		[Row(UInt64.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue, UInt32.MaxValue)]
		[Row(UInt64.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue, 17)]
		[Row(UInt64.MaxValue, 123)]
		[Row(UInt64.MaxValue - 1, 0)]
		[Row(UInt64.MaxValue - 1, 1)]
		[Row(UInt64.MaxValue - 1, 2)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, 17)]
		[Row(UInt64.MaxValue - 1, 123)]
		[Row(UInt32.MaxValue, 0)]
		[Row(UInt32.MaxValue, 1)]
		[Row(UInt32.MaxValue, 2)]
		[Row(UInt32.MaxValue, UInt64.MaxValue)]
		[Row(UInt32.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue, UInt32.MaxValue)]
		[Row(UInt32.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue, 17)]
		[Row(UInt32.MaxValue, 123)]
		[Row(UInt32.MaxValue - 1, 0)]
		[Row(UInt32.MaxValue - 1, 1)]
		[Row(UInt32.MaxValue - 1, 2)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, 17)]
		[Row(UInt32.MaxValue - 1, 123)]
		[Row(17, 0)]
		[Row(17, 1)]
		[Row(17, 2)]
		[Row(17, UInt64.MaxValue)]
		[Row(17, UInt64.MaxValue - 1)]
		[Row(17, UInt32.MaxValue)]
		[Row(17, UInt32.MaxValue - 1)]
		[Row(17, 17)]
		[Row(17, 123)]
		[Row(123, 0)]
		[Row(123, 1)]
		[Row(123, 2)]
		[Row(123, UInt64.MaxValue)]
		[Row(123, UInt64.MaxValue - 1)]
		[Row(123, UInt32.MaxValue)]
		[Row(123, UInt32.MaxValue - 1)]
		[Row(123, 17)]
		[Row(123, 123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Add(ulong a, ulong b)
		{
			this.arithmeticTests.Add((a + b), a, b);
		}

		#endregion // Add

		#region Sub

		[Row(0, 0)]
		[Row(0, 1)]
		[Row(0, 2)]
		[Row(0, UInt64.MaxValue)]
		[Row(0, UInt64.MaxValue - 1)]
		[Row(0, UInt32.MaxValue)]
		[Row(0, UInt32.MaxValue - 1)]
		[Row(0, 17)]
		[Row(0, 123)]
		[Row(1, 0)]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, UInt64.MaxValue)]
		[Row(1, UInt64.MaxValue - 1)]
		[Row(1, UInt32.MaxValue)]
		[Row(1, UInt32.MaxValue - 1)]
		[Row(1, 17)]
		[Row(1, 123)]
		[Row(2, 0)]
		[Row(2, 1)]
		[Row(2, 2)]
		[Row(2, UInt64.MaxValue)]
		[Row(2, UInt64.MaxValue - 1)]
		[Row(2, UInt32.MaxValue)]
		[Row(2, UInt32.MaxValue - 1)]
		[Row(2, 17)]
		[Row(2, 123)]
		[Row(UInt64.MaxValue, 0)]
		[Row(UInt64.MaxValue, 1)]
		[Row(UInt64.MaxValue, 2)]
		[Row(UInt64.MaxValue, UInt64.MaxValue)]
		[Row(UInt64.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue, UInt32.MaxValue)]
		[Row(UInt64.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue, 17)]
		[Row(UInt64.MaxValue, 123)]
		[Row(UInt64.MaxValue - 1, 0)]
		[Row(UInt64.MaxValue - 1, 1)]
		[Row(UInt64.MaxValue - 1, 2)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, 17)]
		[Row(UInt64.MaxValue - 1, 123)]
		[Row(UInt32.MaxValue, 0)]
		[Row(UInt32.MaxValue, 1)]
		[Row(UInt32.MaxValue, 2)]
		[Row(UInt32.MaxValue, UInt64.MaxValue)]
		[Row(UInt32.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue, UInt32.MaxValue)]
		[Row(UInt32.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue, 17)]
		[Row(UInt32.MaxValue, 123)]
		[Row(UInt32.MaxValue - 1, 0)]
		[Row(UInt32.MaxValue - 1, 1)]
		[Row(UInt32.MaxValue - 1, 2)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, 17)]
		[Row(UInt32.MaxValue - 1, 123)]
		[Row(17, 0)]
		[Row(17, 1)]
		[Row(17, 2)]
		[Row(17, UInt64.MaxValue)]
		[Row(17, UInt64.MaxValue - 1)]
		[Row(17, UInt32.MaxValue)]
		[Row(17, UInt32.MaxValue - 1)]
		[Row(17, 17)]
		[Row(17, 123)]
		[Row(123, 0)]
		[Row(123, 1)]
		[Row(123, 2)]
		[Row(123, UInt64.MaxValue)]
		[Row(123, UInt64.MaxValue - 1)]
		[Row(123, UInt32.MaxValue)]
		[Row(123, UInt32.MaxValue - 1)]
		[Row(123, 17)]
		[Row(123, 123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Sub(ulong a, ulong b)
		{
			this.arithmeticTests.Sub((a - b), a, b);
		}

		#endregion // Sub

		#region Mul

		[Row(0, 0)]
		[Row(0, 1)]
		[Row(0, 2)]
		[Row(0, UInt64.MaxValue)]
		[Row(0, UInt64.MaxValue - 1)]
		[Row(0, UInt32.MaxValue)]
		[Row(0, UInt32.MaxValue - 1)]
		[Row(0, 17)]
		[Row(0, 123)]
		[Row(1, 0)]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, UInt64.MaxValue)]
		[Row(1, UInt64.MaxValue - 1)]
		[Row(1, UInt32.MaxValue)]
		[Row(1, UInt32.MaxValue - 1)]
		[Row(1, 17)]
		[Row(1, 123)]
		[Row(2, 0)]
		[Row(2, 1)]
		[Row(2, 2)]
		[Row(2, UInt64.MaxValue)]
		[Row(2, UInt64.MaxValue - 1)]
		[Row(2, UInt32.MaxValue)]
		[Row(2, UInt32.MaxValue - 1)]
		[Row(2, 17)]
		[Row(2, 123)]
		[Row(UInt64.MaxValue, 0)]
		[Row(UInt64.MaxValue, 1)]
		[Row(UInt64.MaxValue, 2)]
		[Row(UInt64.MaxValue, UInt64.MaxValue)]
		[Row(UInt64.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue, UInt32.MaxValue)]
		[Row(UInt64.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue, 17)]
		[Row(UInt64.MaxValue, 123)]
		[Row(UInt64.MaxValue - 1, 0)]
		[Row(UInt64.MaxValue - 1, 1)]
		[Row(UInt64.MaxValue - 1, 2)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, 17)]
		[Row(UInt64.MaxValue - 1, 123)]
		[Row(UInt32.MaxValue, 0)]
		[Row(UInt32.MaxValue, 1)]
		[Row(UInt32.MaxValue, 2)]
		[Row(UInt32.MaxValue, UInt64.MaxValue)]
		[Row(UInt32.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue, UInt32.MaxValue)]
		[Row(UInt32.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue, 17)]
		[Row(UInt32.MaxValue, 123)]
		[Row(UInt32.MaxValue - 1, 0)]
		[Row(UInt32.MaxValue - 1, 1)]
		[Row(UInt32.MaxValue - 1, 2)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, 17)]
		[Row(UInt32.MaxValue - 1, 123)]
		[Row(17, 0)]
		[Row(17, 1)]
		[Row(17, 2)]
		[Row(17, UInt64.MaxValue)]
		[Row(17, UInt64.MaxValue - 1)]
		[Row(17, UInt32.MaxValue)]
		[Row(17, UInt32.MaxValue - 1)]
		[Row(17, 17)]
		[Row(17, 123)]
		[Row(123, 0)]
		[Row(123, 1)]
		[Row(123, 2)]
		[Row(123, UInt64.MaxValue)]
		[Row(123, UInt64.MaxValue - 1)]
		[Row(123, UInt32.MaxValue)]
		[Row(123, UInt32.MaxValue - 1)]
		[Row(123, 17)]
		[Row(123, 123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Mul(ulong a, ulong b)
		{
			this.arithmeticTests.Mul((a * b), a, b);
		}

		#endregion // Mul

		#region Div

		[Row(0, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(0, 1)]
		[Row(0, 2)]
		[Row(0, UInt64.MaxValue)]
		[Row(0, UInt64.MaxValue - 1)]
		[Row(0, UInt32.MaxValue)]
		[Row(0, UInt32.MaxValue - 1)]
		[Row(0, 17)]
		[Row(0, 123)]
		[Row(1, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, UInt64.MaxValue)]
		[Row(1, UInt64.MaxValue - 1)]
		[Row(1, UInt32.MaxValue)]
		[Row(1, UInt32.MaxValue - 1)]
		[Row(1, 17)]
		[Row(1, 123)]
		[Row(2, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(2, 1)]
		[Row(2, 2)]
		[Row(2, UInt64.MaxValue)]
		[Row(2, UInt64.MaxValue - 1)]
		[Row(2, UInt32.MaxValue)]
		[Row(2, UInt32.MaxValue - 1)]
		[Row(2, 17)]
		[Row(2, 123)]
		[Row(UInt64.MaxValue, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(UInt64.MaxValue, 1)]
		[Row(UInt64.MaxValue, 2)]
		[Row(UInt64.MaxValue, UInt64.MaxValue)]
		[Row(UInt64.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue, UInt32.MaxValue)]
		[Row(UInt64.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue, 17)]
		[Row(UInt64.MaxValue, 123)]
		[Row(UInt64.MaxValue - 1, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(UInt64.MaxValue - 1, 1)]
		[Row(UInt64.MaxValue - 1, 2)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, 17)]
		[Row(UInt64.MaxValue - 1, 123)]
		[Row(UInt32.MaxValue, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(UInt32.MaxValue, 1)]
		[Row(UInt32.MaxValue, 2)]
		[Row(UInt32.MaxValue, UInt64.MaxValue)]
		[Row(UInt32.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue, UInt32.MaxValue)]
		[Row(UInt32.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue, 17)]
		[Row(UInt32.MaxValue, 123)]
		[Row(UInt32.MaxValue - 1, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(UInt32.MaxValue - 1, 1)]
		[Row(UInt32.MaxValue - 1, 2)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, 17)]
		[Row(UInt32.MaxValue - 1, 123)]
		[Row(17, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(17, 1)]
		[Row(17, 2)]
		[Row(17, UInt64.MaxValue)]
		[Row(17, UInt64.MaxValue - 1)]
		[Row(17, UInt32.MaxValue)]
		[Row(17, UInt32.MaxValue - 1)]
		[Row(17, 17)]
		[Row(17, 123)]
		[Row(123, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(123, 1)]
		[Row(123, 2)]
		[Row(123, UInt64.MaxValue)]
		[Row(123, UInt64.MaxValue - 1)]
		[Row(123, UInt32.MaxValue)]
		[Row(123, UInt32.MaxValue - 1)]
		[Row(123, 17)]
		[Row(123, 123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Div(ulong a, ulong b)
		{
			this.arithmeticTests.Div((a / b), a, b);
		}

		#endregion // Div

		#region Rem

		[Row(0, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(0, 1)]
		[Row(0, 2)]
		[Row(0, UInt64.MaxValue)]
		[Row(0, UInt64.MaxValue - 1)]
		[Row(0, UInt32.MaxValue)]
		[Row(0, UInt32.MaxValue - 1)]
		[Row(0, 17)]
		[Row(0, 123)]
		[Row(1, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, UInt64.MaxValue)]
		[Row(1, UInt64.MaxValue - 1)]
		[Row(1, UInt32.MaxValue)]
		[Row(1, UInt32.MaxValue - 1)]
		[Row(1, 17)]
		[Row(1, 123)]
		[Row(2, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(2, 1)]
		[Row(2, 2)]
		[Row(2, UInt64.MaxValue)]
		[Row(2, UInt64.MaxValue - 1)]
		[Row(2, UInt32.MaxValue)]
		[Row(2, UInt32.MaxValue - 1)]
		[Row(2, 17)]
		[Row(2, 123)]
		[Row(UInt64.MaxValue, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(UInt64.MaxValue, 1)]
		[Row(UInt64.MaxValue, 2)]
		[Row(UInt64.MaxValue, UInt64.MaxValue)]
		[Row(UInt64.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue, UInt32.MaxValue)]
		[Row(UInt64.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue, 17)]
		[Row(UInt64.MaxValue, 123)]
		[Row(UInt64.MaxValue - 1, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(UInt64.MaxValue - 1, 1)]
		[Row(UInt64.MaxValue - 1, 2)]
		//[Row(UInt64.MaxValue - 1, UInt64.MaxValue)] // BUG
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, 17)]
		[Row(UInt64.MaxValue - 1, 123)]
		[Row(UInt32.MaxValue, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(UInt32.MaxValue, 1)]
		[Row(UInt32.MaxValue, 2)]
		[Row(UInt32.MaxValue, UInt64.MaxValue)]
		[Row(UInt32.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue, UInt32.MaxValue)]
		[Row(UInt32.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue, 17)]
		[Row(UInt32.MaxValue, 123)]
		[Row(UInt32.MaxValue - 1, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(UInt32.MaxValue - 1, 1)]
		[Row(UInt32.MaxValue - 1, 2)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, 17)]
		[Row(UInt32.MaxValue - 1, 123)]
		[Row(17, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(17, 1)]
		[Row(17, 2)]
		[Row(17, UInt64.MaxValue)]
		[Row(17, UInt64.MaxValue - 1)]
		[Row(17, UInt32.MaxValue)]
		[Row(17, UInt32.MaxValue - 1)]
		[Row(17, 17)]
		[Row(17, 123)]
		[Row(123, 0, ExpectedException = typeof(DivideByZeroException))]
		[Row(123, 1)]
		[Row(123, 2)]
		[Row(123, UInt64.MaxValue)]
		[Row(123, UInt64.MaxValue - 1)]
		[Row(123, UInt32.MaxValue)]
		[Row(123, UInt32.MaxValue - 1)]
		[Row(123, 17)]
		[Row(123, 123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Rem(ulong a, ulong b)
		{
			this.arithmeticTests.Rem((a % b), a, b);
		}

		#endregion // Rem

		#region Ret

		[Row(0)]
		[Row(1)]
		[Row(2)]
		[Row(UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1)]
		[Row(17)]
		[Row(123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Ret(ulong value)
		{
			this.arithmeticTests.Ret(value);
		}

		#endregion // Ret

		#region And

		[Row(0, 0)]
		[Row(0, 1)]
		[Row(0, 2)]
		[Row(0, UInt64.MaxValue)]
		[Row(0, UInt64.MaxValue - 1)]
		[Row(0, UInt32.MaxValue)]
		[Row(0, UInt32.MaxValue - 1)]
		[Row(0, 17)]
		[Row(0, 123)]
		[Row(1, 0)]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, UInt64.MaxValue)]
		[Row(1, UInt64.MaxValue - 1)]
		[Row(1, UInt32.MaxValue)]
		[Row(1, UInt32.MaxValue - 1)]
		[Row(1, 17)]
		[Row(1, 123)]
		[Row(2, 0)]
		[Row(2, 1)]
		[Row(2, 2)]
		[Row(2, UInt64.MaxValue)]
		[Row(2, UInt64.MaxValue - 1)]
		[Row(2, UInt32.MaxValue)]
		[Row(2, UInt32.MaxValue - 1)]
		[Row(2, 17)]
		[Row(2, 123)]
		[Row(UInt64.MaxValue, 0)]
		[Row(UInt64.MaxValue, 1)]
		[Row(UInt64.MaxValue, 2)]
		[Row(UInt64.MaxValue, UInt64.MaxValue)]
		[Row(UInt64.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue, UInt32.MaxValue)]
		[Row(UInt64.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue, 17)]
		[Row(UInt64.MaxValue, 123)]
		[Row(UInt64.MaxValue - 1, 0)]
		[Row(UInt64.MaxValue - 1, 1)]
		[Row(UInt64.MaxValue - 1, 2)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, 17)]
		[Row(UInt64.MaxValue - 1, 123)]
		[Row(UInt32.MaxValue, 0)]
		[Row(UInt32.MaxValue, 1)]
		[Row(UInt32.MaxValue, 2)]
		[Row(UInt32.MaxValue, UInt64.MaxValue)]
		[Row(UInt32.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue, UInt32.MaxValue)]
		[Row(UInt32.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue, 17)]
		[Row(UInt32.MaxValue, 123)]
		[Row(UInt32.MaxValue - 1, 0)]
		[Row(UInt32.MaxValue - 1, 1)]
		[Row(UInt32.MaxValue - 1, 2)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, 17)]
		[Row(UInt32.MaxValue - 1, 123)]
		[Row(17, 0)]
		[Row(17, 1)]
		[Row(17, 2)]
		[Row(17, UInt64.MaxValue)]
		[Row(17, UInt64.MaxValue - 1)]
		[Row(17, UInt32.MaxValue)]
		[Row(17, UInt32.MaxValue - 1)]
		[Row(17, 17)]
		[Row(17, 123)]
		[Row(123, 0)]
		[Row(123, 1)]
		[Row(123, 2)]
		[Row(123, UInt64.MaxValue)]
		[Row(123, UInt64.MaxValue - 1)]
		[Row(123, UInt32.MaxValue)]
		[Row(123, UInt32.MaxValue - 1)]
		[Row(123, 17)]
		[Row(123, 123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void And(ulong first, ulong second)
		{
			this.logicTests.And((first & second), first, second);
		}

		#endregion // And

		#region Or

		[Row(0, 0)]
		[Row(0, 1)]
		[Row(0, 2)]
		[Row(0, UInt64.MaxValue)]
		[Row(0, UInt64.MaxValue - 1)]
		[Row(0, UInt32.MaxValue)]
		[Row(0, UInt32.MaxValue - 1)]
		[Row(0, 17)]
		[Row(0, 123)]
		[Row(1, 0)]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, UInt64.MaxValue)]
		[Row(1, UInt64.MaxValue - 1)]
		[Row(1, UInt32.MaxValue)]
		[Row(1, UInt32.MaxValue - 1)]
		[Row(1, 17)]
		[Row(1, 123)]
		[Row(2, 0)]
		[Row(2, 1)]
		[Row(2, 2)]
		[Row(2, UInt64.MaxValue)]
		[Row(2, UInt64.MaxValue - 1)]
		[Row(2, UInt32.MaxValue)]
		[Row(2, UInt32.MaxValue - 1)]
		[Row(2, 17)]
		[Row(2, 123)]
		[Row(UInt64.MaxValue, 0)]
		[Row(UInt64.MaxValue, 1)]
		[Row(UInt64.MaxValue, 2)]
		[Row(UInt64.MaxValue, UInt64.MaxValue)]
		[Row(UInt64.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue, UInt32.MaxValue)]
		[Row(UInt64.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue, 17)]
		[Row(UInt64.MaxValue, 123)]
		[Row(UInt64.MaxValue - 1, 0)]
		[Row(UInt64.MaxValue - 1, 1)]
		[Row(UInt64.MaxValue - 1, 2)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, 17)]
		[Row(UInt64.MaxValue - 1, 123)]
		[Row(UInt32.MaxValue, 0)]
		[Row(UInt32.MaxValue, 1)]
		[Row(UInt32.MaxValue, 2)]
		[Row(UInt32.MaxValue, UInt64.MaxValue)]
		[Row(UInt32.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue, UInt32.MaxValue)]
		[Row(UInt32.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue, 17)]
		[Row(UInt32.MaxValue, 123)]
		[Row(UInt32.MaxValue - 1, 0)]
		[Row(UInt32.MaxValue - 1, 1)]
		[Row(UInt32.MaxValue - 1, 2)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, 17)]
		[Row(UInt32.MaxValue - 1, 123)]
		[Row(17, 0)]
		[Row(17, 1)]
		[Row(17, 2)]
		[Row(17, UInt64.MaxValue)]
		[Row(17, UInt64.MaxValue - 1)]
		[Row(17, UInt32.MaxValue)]
		[Row(17, UInt32.MaxValue - 1)]
		[Row(17, 17)]
		[Row(17, 123)]
		[Row(123, 0)]
		[Row(123, 1)]
		[Row(123, 2)]
		[Row(123, UInt64.MaxValue)]
		[Row(123, UInt64.MaxValue - 1)]
		[Row(123, UInt32.MaxValue)]
		[Row(123, UInt32.MaxValue - 1)]
		[Row(123, 17)]
		[Row(123, 123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Or(ulong first, ulong second)
		{
			this.logicTests.Or((first | second), first, second);
		}

		#endregion // Or

		#region Xor

		[Row(0, 0)]
		[Row(0, 1)]
		[Row(0, 2)]
		[Row(0, UInt64.MaxValue)]
		[Row(0, UInt64.MaxValue - 1)]
		[Row(0, UInt32.MaxValue)]
		[Row(0, UInt32.MaxValue - 1)]
		[Row(0, 17)]
		[Row(0, 123)]
		[Row(1, 0)]
		[Row(1, 1)]
		[Row(1, 2)]
		[Row(1, UInt64.MaxValue)]
		[Row(1, UInt64.MaxValue - 1)]
		[Row(1, UInt32.MaxValue)]
		[Row(1, UInt32.MaxValue - 1)]
		[Row(1, 17)]
		[Row(1, 123)]
		[Row(2, 0)]
		[Row(2, 1)]
		[Row(2, 2)]
		[Row(2, UInt64.MaxValue)]
		[Row(2, UInt64.MaxValue - 1)]
		[Row(2, UInt32.MaxValue)]
		[Row(2, UInt32.MaxValue - 1)]
		[Row(2, 17)]
		[Row(2, 123)]
		[Row(UInt64.MaxValue, 0)]
		[Row(UInt64.MaxValue, 1)]
		[Row(UInt64.MaxValue, 2)]
		[Row(UInt64.MaxValue, UInt64.MaxValue)]
		[Row(UInt64.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue, UInt32.MaxValue)]
		[Row(UInt64.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue, 17)]
		[Row(UInt64.MaxValue, 123)]
		[Row(UInt64.MaxValue - 1, 0)]
		[Row(UInt64.MaxValue - 1, 1)]
		[Row(UInt64.MaxValue - 1, 2)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt64.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt64.MaxValue - 1, 17)]
		[Row(UInt64.MaxValue - 1, 123)]
		[Row(UInt32.MaxValue, 0)]
		[Row(UInt32.MaxValue, 1)]
		[Row(UInt32.MaxValue, 2)]
		[Row(UInt32.MaxValue, UInt64.MaxValue)]
		[Row(UInt32.MaxValue, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue, UInt32.MaxValue)]
		[Row(UInt32.MaxValue, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue, 17)]
		[Row(UInt32.MaxValue, 123)]
		[Row(UInt32.MaxValue - 1, 0)]
		[Row(UInt32.MaxValue - 1, 1)]
		[Row(UInt32.MaxValue - 1, 2)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1, UInt32.MaxValue - 1)]
		[Row(UInt32.MaxValue - 1, 17)]
		[Row(UInt32.MaxValue - 1, 123)]
		[Row(17, 0)]
		[Row(17, 1)]
		[Row(17, 2)]
		[Row(17, UInt64.MaxValue)]
		[Row(17, UInt64.MaxValue - 1)]
		[Row(17, UInt32.MaxValue)]
		[Row(17, UInt32.MaxValue - 1)]
		[Row(17, 17)]
		[Row(17, 123)]
		[Row(123, 0)]
		[Row(123, 1)]
		[Row(123, 2)]
		[Row(123, UInt64.MaxValue)]
		[Row(123, UInt64.MaxValue - 1)]
		[Row(123, UInt32.MaxValue)]
		[Row(123, UInt32.MaxValue - 1)]
		[Row(123, 17)]
		[Row(123, 123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Xor(ulong first, ulong second)
		{
			this.logicTests.Xor((first ^ second), first, second);
		}

		#endregion // Xor

		#region Comp

		[Row(0)]
		[Row(1)]
		[Row(2)]
		[Row(UInt64.MaxValue)]
		[Row(UInt64.MaxValue - 1)]
		[Row(UInt32.MaxValue)]
		[Row(UInt32.MaxValue - 1)]
		[Row(17)]
		[Row(123)]
		[Test, Author("tgiphil", "phil@thinkedge.com")]
		public void Comp(ulong first)
		{
			this.logicTests.Comp(~first, first);
		}

		#endregion // Comp

		//#region Shl

		//[Row(0, 0)]
		//[Row(0, 1)]
		//[Row(0, 2)]
		//[Row(0, 3)]
		//[Row(0, 4)]
		//[Row(0, 5)]
		//[Row(0, 6)]
		//[Row(0, 7)]
		//[Row(0, 8)]
		//[Row(0, 9)]
		//[Row(0, 10)]
		//[Row(0, 11)]
		//[Row(0, 12)]
		//[Row(0, 13)]
		//[Row(0, 14)]
		//[Row(0, 15)]
		//[Row(0, 16)]
		//[Row(0, 17)]
		//[Row(0, 18)]
		//[Row(0, 19)]
		//[Row(0, 20)]
		//[Row(0, 21)]
		//[Row(0, 22)]
		//[Row(0, 23)]
		//[Row(0, 24)]
		//[Row(0, 25)]
		//[Row(0, 26)]
		//[Row(0, 27)]
		//[Row(0, 28)]
		//[Row(0, 29)]
		//[Row(0, 30)]
		//[Row(0, 31)]
		//[Row(0, 32)]
		//[Row(0, 33)]
		//[Row(0, 34)]
		//[Row(0, 35)]
		//[Row(0, 36)]
		//[Row(0, 37)]
		//[Row(0, 38)]
		//[Row(0, 39)]
		//[Row(0, 40)]
		//[Row(0, 41)]
		//[Row(0, 42)]
		//[Row(0, 43)]
		//[Row(0, 44)]
		//[Row(0, 45)]
		//[Row(0, 46)]
		//[Row(0, 47)]
		//[Row(0, 48)]
		//[Row(0, 49)]
		//[Row(0, 50)]
		//[Row(0, 51)]
		//[Row(0, 52)]
		//[Row(0, 53)]
		//[Row(0, 54)]
		//[Row(0, 55)]
		//[Row(0, 56)]
		//[Row(0, 57)]
		//[Row(0, 58)]
		//[Row(0, 59)]
		//[Row(0, 60)]
		//[Row(0, 61)]
		//[Row(0, 62)]
		//[Row(0, 63)]
		//[Row(1, 0)]
		//[Row(1, 1)]
		//[Row(1, 2)]
		//[Row(1, 3)]
		//[Row(1, 4)]
		//[Row(1, 5)]
		//[Row(1, 6)]
		//[Row(1, 7)]
		//[Row(1, 8)]
		//[Row(1, 9)]
		//[Row(1, 10)]
		//[Row(1, 11)]
		//[Row(1, 12)]
		//[Row(1, 13)]
		//[Row(1, 14)]
		//[Row(1, 15)]
		//[Row(1, 16)]
		//[Row(1, 17)]
		//[Row(1, 18)]
		//[Row(1, 19)]
		//[Row(1, 20)]
		//[Row(1, 21)]
		//[Row(1, 22)]
		//[Row(1, 23)]
		//[Row(1, 24)]
		//[Row(1, 25)]
		//[Row(1, 26)]
		//[Row(1, 27)]
		//[Row(1, 28)]
		//[Row(1, 29)]
		//[Row(1, 30)]
		//[Row(1, 31)]
		//[Row(1, 32)]
		//[Row(1, 33)]
		//[Row(1, 34)]
		//[Row(1, 35)]
		//[Row(1, 36)]
		//[Row(1, 37)]
		//[Row(1, 38)]
		//[Row(1, 39)]
		//[Row(1, 40)]
		//[Row(1, 41)]
		//[Row(1, 42)]
		//[Row(1, 43)]
		//[Row(1, 44)]
		//[Row(1, 45)]
		//[Row(1, 46)]
		//[Row(1, 47)]
		//[Row(1, 48)]
		//[Row(1, 49)]
		//[Row(1, 50)]
		//[Row(1, 51)]
		//[Row(1, 52)]
		//[Row(1, 53)]
		//[Row(1, 54)]
		//[Row(1, 55)]
		//[Row(1, 56)]
		//[Row(1, 57)]
		//[Row(1, 58)]
		//[Row(1, 59)]
		//[Row(1, 60)]
		//[Row(1, 61)]
		//[Row(1, 62)]
		//[Row(1, 63)]
		//[Row(2, 0)]
		//[Row(2, 1)]
		//[Row(2, 2)]
		//[Row(2, 3)]
		//[Row(2, 4)]
		//[Row(2, 5)]
		//[Row(2, 6)]
		//[Row(2, 7)]
		//[Row(2, 8)]
		//[Row(2, 9)]
		//[Row(2, 10)]
		//[Row(2, 11)]
		//[Row(2, 12)]
		//[Row(2, 13)]
		//[Row(2, 14)]
		//[Row(2, 15)]
		//[Row(2, 16)]
		//[Row(2, 17)]
		//[Row(2, 18)]
		//[Row(2, 19)]
		//[Row(2, 20)]
		//[Row(2, 21)]
		//[Row(2, 22)]
		//[Row(2, 23)]
		//[Row(2, 24)]
		//[Row(2, 25)]
		//[Row(2, 26)]
		//[Row(2, 27)]
		//[Row(2, 28)]
		//[Row(2, 29)]
		//[Row(2, 30)]
		//[Row(2, 31)]
		//[Row(2, 32)]
		//[Row(2, 33)]
		//[Row(2, 34)]
		//[Row(2, 35)]
		//[Row(2, 36)]
		//[Row(2, 37)]
		//[Row(2, 38)]
		//[Row(2, 39)]
		//[Row(2, 40)]
		//[Row(2, 41)]
		//[Row(2, 42)]
		//[Row(2, 43)]
		//[Row(2, 44)]
		//[Row(2, 45)]
		//[Row(2, 46)]
		//[Row(2, 47)]
		//[Row(2, 48)]
		//[Row(2, 49)]
		//[Row(2, 50)]
		//[Row(2, 51)]
		//[Row(2, 52)]
		//[Row(2, 53)]
		//[Row(2, 54)]
		//[Row(2, 55)]
		//[Row(2, 56)]
		//[Row(2, 57)]
		//[Row(2, 58)]
		//[Row(2, 59)]
		//[Row(2, 60)]
		//[Row(2, 61)]
		//[Row(2, 62)]
		//[Row(2, 63)]
		//[Row(UInt64.MaxValue, 0)]
		//[Row(UInt64.MaxValue, 1)]
		//[Row(UInt64.MaxValue, 2)]
		//[Row(UInt64.MaxValue, 3)]
		//[Row(UInt64.MaxValue, 4)]
		//[Row(UInt64.MaxValue, 5)]
		//[Row(UInt64.MaxValue, 6)]
		//[Row(UInt64.MaxValue, 7)]
		//[Row(UInt64.MaxValue, 8)]
		//[Row(UInt64.MaxValue, 9)]
		//[Row(UInt64.MaxValue, 10)]
		//[Row(UInt64.MaxValue, 11)]
		//[Row(UInt64.MaxValue, 12)]
		//[Row(UInt64.MaxValue, 13)]
		//[Row(UInt64.MaxValue, 14)]
		//[Row(UInt64.MaxValue, 15)]
		//[Row(UInt64.MaxValue, 16)]
		//[Row(UInt64.MaxValue, 17)]
		//[Row(UInt64.MaxValue, 18)]
		//[Row(UInt64.MaxValue, 19)]
		//[Row(UInt64.MaxValue, 20)]
		//[Row(UInt64.MaxValue, 21)]
		//[Row(UInt64.MaxValue, 22)]
		//[Row(UInt64.MaxValue, 23)]
		//[Row(UInt64.MaxValue, 24)]
		//[Row(UInt64.MaxValue, 25)]
		//[Row(UInt64.MaxValue, 26)]
		//[Row(UInt64.MaxValue, 27)]
		//[Row(UInt64.MaxValue, 28)]
		//[Row(UInt64.MaxValue, 29)]
		//[Row(UInt64.MaxValue, 30)]
		//[Row(UInt64.MaxValue, 31)]
		//[Row(UInt64.MaxValue, 32)]
		//[Row(UInt64.MaxValue, 33)]
		//[Row(UInt64.MaxValue, 34)]
		//[Row(UInt64.MaxValue, 35)]
		//[Row(UInt64.MaxValue, 36)]
		//[Row(UInt64.MaxValue, 37)]
		//[Row(UInt64.MaxValue, 38)]
		//[Row(UInt64.MaxValue, 39)]
		//[Row(UInt64.MaxValue, 40)]
		//[Row(UInt64.MaxValue, 41)]
		//[Row(UInt64.MaxValue, 42)]
		//[Row(UInt64.MaxValue, 43)]
		//[Row(UInt64.MaxValue, 44)]
		//[Row(UInt64.MaxValue, 45)]
		//[Row(UInt64.MaxValue, 46)]
		//[Row(UInt64.MaxValue, 47)]
		//[Row(UInt64.MaxValue, 48)]
		//[Row(UInt64.MaxValue, 49)]
		//[Row(UInt64.MaxValue, 50)]
		//[Row(UInt64.MaxValue, 51)]
		//[Row(UInt64.MaxValue, 52)]
		//[Row(UInt64.MaxValue, 53)]
		//[Row(UInt64.MaxValue, 54)]
		//[Row(UInt64.MaxValue, 55)]
		//[Row(UInt64.MaxValue, 56)]
		//[Row(UInt64.MaxValue, 57)]
		//[Row(UInt64.MaxValue, 58)]
		//[Row(UInt64.MaxValue, 59)]
		//[Row(UInt64.MaxValue, 60)]
		//[Row(UInt64.MaxValue, 61)]
		//[Row(UInt64.MaxValue, 62)]
		//[Row(UInt64.MaxValue, 63)]
		//[Row(UInt64.MaxValue - 1, 0)]
		//[Row(UInt64.MaxValue - 1, 1)]
		//[Row(UInt64.MaxValue - 1, 2)]
		//[Row(UInt64.MaxValue - 1, 3)]
		//[Row(UInt64.MaxValue - 1, 4)]
		//[Row(UInt64.MaxValue - 1, 5)]
		//[Row(UInt64.MaxValue - 1, 6)]
		//[Row(UInt64.MaxValue - 1, 7)]
		//[Row(UInt64.MaxValue - 1, 8)]
		//[Row(UInt64.MaxValue - 1, 9)]
		//[Row(UInt64.MaxValue - 1, 10)]
		//[Row(UInt64.MaxValue - 1, 11)]
		//[Row(UInt64.MaxValue - 1, 12)]
		//[Row(UInt64.MaxValue - 1, 13)]
		//[Row(UInt64.MaxValue - 1, 14)]
		//[Row(UInt64.MaxValue - 1, 15)]
		//[Row(UInt64.MaxValue - 1, 16)]
		//[Row(UInt64.MaxValue - 1, 17)]
		//[Row(UInt64.MaxValue - 1, 18)]
		//[Row(UInt64.MaxValue - 1, 19)]
		//[Row(UInt64.MaxValue - 1, 20)]
		//[Row(UInt64.MaxValue - 1, 21)]
		//[Row(UInt64.MaxValue - 1, 22)]
		//[Row(UInt64.MaxValue - 1, 23)]
		//[Row(UInt64.MaxValue - 1, 24)]
		//[Row(UInt64.MaxValue - 1, 25)]
		//[Row(UInt64.MaxValue - 1, 26)]
		//[Row(UInt64.MaxValue - 1, 27)]
		//[Row(UInt64.MaxValue - 1, 28)]
		//[Row(UInt64.MaxValue - 1, 29)]
		//[Row(UInt64.MaxValue - 1, 30)]
		//[Row(UInt64.MaxValue - 1, 31)]
		//[Row(UInt64.MaxValue - 1, 32)]
		//[Row(UInt64.MaxValue - 1, 33)]
		//[Row(UInt64.MaxValue - 1, 34)]
		//[Row(UInt64.MaxValue - 1, 35)]
		//[Row(UInt64.MaxValue - 1, 36)]
		//[Row(UInt64.MaxValue - 1, 37)]
		//[Row(UInt64.MaxValue - 1, 38)]
		//[Row(UInt64.MaxValue - 1, 39)]
		//[Row(UInt64.MaxValue - 1, 40)]
		//[Row(UInt64.MaxValue - 1, 41)]
		//[Row(UInt64.MaxValue - 1, 42)]
		//[Row(UInt64.MaxValue - 1, 43)]
		//[Row(UInt64.MaxValue - 1, 44)]
		//[Row(UInt64.MaxValue - 1, 45)]
		//[Row(UInt64.MaxValue - 1, 46)]
		//[Row(UInt64.MaxValue - 1, 47)]
		//[Row(UInt64.MaxValue - 1, 48)]
		//[Row(UInt64.MaxValue - 1, 49)]
		//[Row(UInt64.MaxValue - 1, 50)]
		//[Row(UInt64.MaxValue - 1, 51)]
		//[Row(UInt64.MaxValue - 1, 52)]
		//[Row(UInt64.MaxValue - 1, 53)]
		//[Row(UInt64.MaxValue - 1, 54)]
		//[Row(UInt64.MaxValue - 1, 55)]
		//[Row(UInt64.MaxValue - 1, 56)]
		//[Row(UInt64.MaxValue - 1, 57)]
		//[Row(UInt64.MaxValue - 1, 58)]
		//[Row(UInt64.MaxValue - 1, 59)]
		//[Row(UInt64.MaxValue - 1, 60)]
		//[Row(UInt64.MaxValue - 1, 61)]
		//[Row(UInt64.MaxValue - 1, 62)]
		//[Row(UInt64.MaxValue - 1, 63)]
		//[Row(UInt32.MaxValue, 0)]
		//[Row(UInt32.MaxValue, 1)]
		//[Row(UInt32.MaxValue, 2)]
		//[Row(UInt32.MaxValue, 3)]
		//[Row(UInt32.MaxValue, 4)]
		//[Row(UInt32.MaxValue, 5)]
		//[Row(UInt32.MaxValue, 6)]
		//[Row(UInt32.MaxValue, 7)]
		//[Row(UInt32.MaxValue, 8)]
		//[Row(UInt32.MaxValue, 9)]
		//[Row(UInt32.MaxValue, 10)]
		//[Row(UInt32.MaxValue, 11)]
		//[Row(UInt32.MaxValue, 12)]
		//[Row(UInt32.MaxValue, 13)]
		//[Row(UInt32.MaxValue, 14)]
		//[Row(UInt32.MaxValue, 15)]
		//[Row(UInt32.MaxValue, 16)]
		//[Row(UInt32.MaxValue, 17)]
		//[Row(UInt32.MaxValue, 18)]
		//[Row(UInt32.MaxValue, 19)]
		//[Row(UInt32.MaxValue, 20)]
		//[Row(UInt32.MaxValue, 21)]
		//[Row(UInt32.MaxValue, 22)]
		//[Row(UInt32.MaxValue, 23)]
		//[Row(UInt32.MaxValue, 24)]
		//[Row(UInt32.MaxValue, 25)]
		//[Row(UInt32.MaxValue, 26)]
		//[Row(UInt32.MaxValue, 27)]
		//[Row(UInt32.MaxValue, 28)]
		//[Row(UInt32.MaxValue, 29)]
		//[Row(UInt32.MaxValue, 30)]
		//[Row(UInt32.MaxValue, 31)]
		//[Row(UInt32.MaxValue, 32)]
		//[Row(UInt32.MaxValue, 33)]
		//[Row(UInt32.MaxValue, 34)]
		//[Row(UInt32.MaxValue, 35)]
		//[Row(UInt32.MaxValue, 36)]
		//[Row(UInt32.MaxValue, 37)]
		//[Row(UInt32.MaxValue, 38)]
		//[Row(UInt32.MaxValue, 39)]
		//[Row(UInt32.MaxValue, 40)]
		//[Row(UInt32.MaxValue, 41)]
		//[Row(UInt32.MaxValue, 42)]
		//[Row(UInt32.MaxValue, 43)]
		//[Row(UInt32.MaxValue, 44)]
		//[Row(UInt32.MaxValue, 45)]
		//[Row(UInt32.MaxValue, 46)]
		//[Row(UInt32.MaxValue, 47)]
		//[Row(UInt32.MaxValue, 48)]
		//[Row(UInt32.MaxValue, 49)]
		//[Row(UInt32.MaxValue, 50)]
		//[Row(UInt32.MaxValue, 51)]
		//[Row(UInt32.MaxValue, 52)]
		//[Row(UInt32.MaxValue, 53)]
		//[Row(UInt32.MaxValue, 54)]
		//[Row(UInt32.MaxValue, 55)]
		//[Row(UInt32.MaxValue, 56)]
		//[Row(UInt32.MaxValue, 57)]
		//[Row(UInt32.MaxValue, 58)]
		//[Row(UInt32.MaxValue, 59)]
		//[Row(UInt32.MaxValue, 60)]
		//[Row(UInt32.MaxValue, 61)]
		//[Row(UInt32.MaxValue, 62)]
		//[Row(UInt32.MaxValue, 63)]
		//[Row(UInt32.MaxValue - 1, 0)]
		//[Row(UInt32.MaxValue - 1, 1)]
		//[Row(UInt32.MaxValue - 1, 2)]
		//[Row(UInt32.MaxValue - 1, 3)]
		//[Row(UInt32.MaxValue - 1, 4)]
		//[Row(UInt32.MaxValue - 1, 5)]
		//[Row(UInt32.MaxValue - 1, 6)]
		//[Row(UInt32.MaxValue - 1, 7)]
		//[Row(UInt32.MaxValue - 1, 8)]
		//[Row(UInt32.MaxValue - 1, 9)]
		//[Row(UInt32.MaxValue - 1, 10)]
		//[Row(UInt32.MaxValue - 1, 11)]
		//[Row(UInt32.MaxValue - 1, 12)]
		//[Row(UInt32.MaxValue - 1, 13)]
		//[Row(UInt32.MaxValue - 1, 14)]
		//[Row(UInt32.MaxValue - 1, 15)]
		//[Row(UInt32.MaxValue - 1, 16)]
		//[Row(UInt32.MaxValue - 1, 17)]
		//[Row(UInt32.MaxValue - 1, 18)]
		//[Row(UInt32.MaxValue - 1, 19)]
		//[Row(UInt32.MaxValue - 1, 20)]
		//[Row(UInt32.MaxValue - 1, 21)]
		//[Row(UInt32.MaxValue - 1, 22)]
		//[Row(UInt32.MaxValue - 1, 23)]
		//[Row(UInt32.MaxValue - 1, 24)]
		//[Row(UInt32.MaxValue - 1, 25)]
		//[Row(UInt32.MaxValue - 1, 26)]
		//[Row(UInt32.MaxValue - 1, 27)]
		//[Row(UInt32.MaxValue - 1, 28)]
		//[Row(UInt32.MaxValue - 1, 29)]
		//[Row(UInt32.MaxValue - 1, 30)]
		//[Row(UInt32.MaxValue - 1, 31)]
		//[Row(UInt32.MaxValue - 1, 32)]
		//[Row(UInt32.MaxValue - 1, 33)]
		//[Row(UInt32.MaxValue - 1, 34)]
		//[Row(UInt32.MaxValue - 1, 35)]
		//[Row(UInt32.MaxValue - 1, 36)]
		//[Row(UInt32.MaxValue - 1, 37)]
		//[Row(UInt32.MaxValue - 1, 38)]
		//[Row(UInt32.MaxValue - 1, 39)]
		//[Row(UInt32.MaxValue - 1, 40)]
		//[Row(UInt32.MaxValue - 1, 41)]
		//[Row(UInt32.MaxValue - 1, 42)]
		//[Row(UInt32.MaxValue - 1, 43)]
		//[Row(UInt32.MaxValue - 1, 44)]
		//[Row(UInt32.MaxValue - 1, 45)]
		//[Row(UInt32.MaxValue - 1, 46)]
		//[Row(UInt32.MaxValue - 1, 47)]
		//[Row(UInt32.MaxValue - 1, 48)]
		//[Row(UInt32.MaxValue - 1, 49)]
		//[Row(UInt32.MaxValue - 1, 50)]
		//[Row(UInt32.MaxValue - 1, 51)]
		//[Row(UInt32.MaxValue - 1, 52)]
		//[Row(UInt32.MaxValue - 1, 53)]
		//[Row(UInt32.MaxValue - 1, 54)]
		//[Row(UInt32.MaxValue - 1, 55)]
		//[Row(UInt32.MaxValue - 1, 56)]
		//[Row(UInt32.MaxValue - 1, 57)]
		//[Row(UInt32.MaxValue - 1, 58)]
		//[Row(UInt32.MaxValue - 1, 59)]
		//[Row(UInt32.MaxValue - 1, 60)]
		//[Row(UInt32.MaxValue - 1, 61)]
		//[Row(UInt32.MaxValue - 1, 62)]
		//[Row(UInt32.MaxValue - 1, 63)]
		//[Row(17, 0)]
		//[Row(17, 1)]
		//[Row(17, 2)]
		//[Row(17, 3)]
		//[Row(17, 4)]
		//[Row(17, 5)]
		//[Row(17, 6)]
		//[Row(17, 7)]
		//[Row(17, 8)]
		//[Row(17, 9)]
		//[Row(17, 10)]
		//[Row(17, 11)]
		//[Row(17, 12)]
		//[Row(17, 13)]
		//[Row(17, 14)]
		//[Row(17, 15)]
		//[Row(17, 16)]
		//[Row(17, 17)]
		//[Row(17, 18)]
		//[Row(17, 19)]
		//[Row(17, 20)]
		//[Row(17, 21)]
		//[Row(17, 22)]
		//[Row(17, 23)]
		//[Row(17, 24)]
		//[Row(17, 25)]
		//[Row(17, 26)]
		//[Row(17, 27)]
		//[Row(17, 28)]
		//[Row(17, 29)]
		//[Row(17, 30)]
		//[Row(17, 31)]
		//[Row(17, 32)]
		//[Row(17, 33)]
		//[Row(17, 34)]
		//[Row(17, 35)]
		//[Row(17, 36)]
		//[Row(17, 37)]
		//[Row(17, 38)]
		//[Row(17, 39)]
		//[Row(17, 40)]
		//[Row(17, 41)]
		//[Row(17, 42)]
		//[Row(17, 43)]
		//[Row(17, 44)]
		//[Row(17, 45)]
		//[Row(17, 46)]
		//[Row(17, 47)]
		//[Row(17, 48)]
		//[Row(17, 49)]
		//[Row(17, 50)]
		//[Row(17, 51)]
		//[Row(17, 52)]
		//[Row(17, 53)]
		//[Row(17, 54)]
		//[Row(17, 55)]
		//[Row(17, 56)]
		//[Row(17, 57)]
		//[Row(17, 58)]
		//[Row(17, 59)]
		//[Row(17, 60)]
		//[Row(17, 61)]
		//[Row(17, 62)]
		//[Row(17, 63)]
		//[Row(123, 0)]
		//[Row(123, 1)]
		//[Row(123, 2)]
		//[Row(123, 3)]
		//[Row(123, 4)]
		//[Row(123, 5)]
		//[Row(123, 6)]
		//[Row(123, 7)]
		//[Row(123, 8)]
		//[Row(123, 9)]
		//[Row(123, 10)]
		//[Row(123, 11)]
		//[Row(123, 12)]
		//[Row(123, 13)]
		//[Row(123, 14)]
		//[Row(123, 15)]
		//[Row(123, 16)]
		//[Row(123, 17)]
		//[Row(123, 18)]
		//[Row(123, 19)]
		//[Row(123, 20)]
		//[Row(123, 21)]
		//[Row(123, 22)]
		//[Row(123, 23)]
		//[Row(123, 24)]
		//[Row(123, 25)]
		//[Row(123, 26)]
		//[Row(123, 27)]
		//[Row(123, 28)]
		//[Row(123, 29)]
		//[Row(123, 30)]
		//[Row(123, 31)]
		//[Row(123, 32)]
		//[Row(123, 33)]
		//[Row(123, 34)]
		//[Row(123, 35)]
		//[Row(123, 36)]
		//[Row(123, 37)]
		//[Row(123, 38)]
		//[Row(123, 39)]
		//[Row(123, 40)]
		//[Row(123, 41)]
		//[Row(123, 42)]
		//[Row(123, 43)]
		//[Row(123, 44)]
		//[Row(123, 45)]
		//[Row(123, 46)]
		//[Row(123, 47)]
		//[Row(123, 48)]
		//[Row(123, 49)]
		//[Row(123, 50)]
		//[Row(123, 51)]
		//[Row(123, 52)]
		//[Row(123, 53)]
		//[Row(123, 54)]
		//[Row(123, 55)]
		//[Row(123, 56)]
		//[Row(123, 57)]
		//[Row(123, 58)]
		//[Row(123, 59)]
		//[Row(123, 60)]
		//[Row(123, 61)]
		//[Row(123, 62)]
		//[Row(123, 63)]
		//[Test, Author("tgiphil", "phil@thinkedge.com")]
		//public void Shl(ulong first, int second)
		//{
		//    this.logicTests.Shl((first << second), first, second);
		//}

		//#endregion // Shl

		//#region Shr

		//[Row(0, 0)]
		//[Row(0, 1)]
		//[Row(0, 2)]
		//[Row(0, 3)]
		//[Row(0, 4)]
		//[Row(0, 5)]
		//[Row(0, 6)]
		//[Row(0, 7)]
		//[Row(0, 8)]
		//[Row(0, 9)]
		//[Row(0, 10)]
		//[Row(0, 11)]
		//[Row(0, 12)]
		//[Row(0, 13)]
		//[Row(0, 14)]
		//[Row(0, 15)]
		//[Row(0, 16)]
		//[Row(0, 17)]
		//[Row(0, 18)]
		//[Row(0, 19)]
		//[Row(0, 20)]
		//[Row(0, 21)]
		//[Row(0, 22)]
		//[Row(0, 23)]
		//[Row(0, 24)]
		//[Row(0, 25)]
		//[Row(0, 26)]
		//[Row(0, 27)]
		//[Row(0, 28)]
		//[Row(0, 29)]
		//[Row(0, 30)]
		//[Row(0, 31)]
		//[Row(0, 32)]
		//[Row(0, 33)]
		//[Row(0, 34)]
		//[Row(0, 35)]
		//[Row(0, 36)]
		//[Row(0, 37)]
		//[Row(0, 38)]
		//[Row(0, 39)]
		//[Row(0, 40)]
		//[Row(0, 41)]
		//[Row(0, 42)]
		//[Row(0, 43)]
		//[Row(0, 44)]
		//[Row(0, 45)]
		//[Row(0, 46)]
		//[Row(0, 47)]
		//[Row(0, 48)]
		//[Row(0, 49)]
		//[Row(0, 50)]
		//[Row(0, 51)]
		//[Row(0, 52)]
		//[Row(0, 53)]
		//[Row(0, 54)]
		//[Row(0, 55)]
		//[Row(0, 56)]
		//[Row(0, 57)]
		//[Row(0, 58)]
		//[Row(0, 59)]
		//[Row(0, 60)]
		//[Row(0, 61)]
		//[Row(0, 62)]
		//[Row(0, 63)]
		//[Row(1, 0)]
		//[Row(1, 1)]
		//[Row(1, 2)]
		//[Row(1, 3)]
		//[Row(1, 4)]
		//[Row(1, 5)]
		//[Row(1, 6)]
		//[Row(1, 7)]
		//[Row(1, 8)]
		//[Row(1, 9)]
		//[Row(1, 10)]
		//[Row(1, 11)]
		//[Row(1, 12)]
		//[Row(1, 13)]
		//[Row(1, 14)]
		//[Row(1, 15)]
		//[Row(1, 16)]
		//[Row(1, 17)]
		//[Row(1, 18)]
		//[Row(1, 19)]
		//[Row(1, 20)]
		//[Row(1, 21)]
		//[Row(1, 22)]
		//[Row(1, 23)]
		//[Row(1, 24)]
		//[Row(1, 25)]
		//[Row(1, 26)]
		//[Row(1, 27)]
		//[Row(1, 28)]
		//[Row(1, 29)]
		//[Row(1, 30)]
		//[Row(1, 31)]
		//[Row(1, 32)]
		//[Row(1, 33)]
		//[Row(1, 34)]
		//[Row(1, 35)]
		//[Row(1, 36)]
		//[Row(1, 37)]
		//[Row(1, 38)]
		//[Row(1, 39)]
		//[Row(1, 40)]
		//[Row(1, 41)]
		//[Row(1, 42)]
		//[Row(1, 43)]
		//[Row(1, 44)]
		//[Row(1, 45)]
		//[Row(1, 46)]
		//[Row(1, 47)]
		//[Row(1, 48)]
		//[Row(1, 49)]
		//[Row(1, 50)]
		//[Row(1, 51)]
		//[Row(1, 52)]
		//[Row(1, 53)]
		//[Row(1, 54)]
		//[Row(1, 55)]
		//[Row(1, 56)]
		//[Row(1, 57)]
		//[Row(1, 58)]
		//[Row(1, 59)]
		//[Row(1, 60)]
		//[Row(1, 61)]
		//[Row(1, 62)]
		//[Row(1, 63)]
		//[Row(2, 0)]
		//[Row(2, 1)]
		//[Row(2, 2)]
		//[Row(2, 3)]
		//[Row(2, 4)]
		//[Row(2, 5)]
		//[Row(2, 6)]
		//[Row(2, 7)]
		//[Row(2, 8)]
		//[Row(2, 9)]
		//[Row(2, 10)]
		//[Row(2, 11)]
		//[Row(2, 12)]
		//[Row(2, 13)]
		//[Row(2, 14)]
		//[Row(2, 15)]
		//[Row(2, 16)]
		//[Row(2, 17)]
		//[Row(2, 18)]
		//[Row(2, 19)]
		//[Row(2, 20)]
		//[Row(2, 21)]
		//[Row(2, 22)]
		//[Row(2, 23)]
		//[Row(2, 24)]
		//[Row(2, 25)]
		//[Row(2, 26)]
		//[Row(2, 27)]
		//[Row(2, 28)]
		//[Row(2, 29)]
		//[Row(2, 30)]
		//[Row(2, 31)]
		//[Row(2, 32)]
		//[Row(2, 33)]
		//[Row(2, 34)]
		//[Row(2, 35)]
		//[Row(2, 36)]
		//[Row(2, 37)]
		//[Row(2, 38)]
		//[Row(2, 39)]
		//[Row(2, 40)]
		//[Row(2, 41)]
		//[Row(2, 42)]
		//[Row(2, 43)]
		//[Row(2, 44)]
		//[Row(2, 45)]
		//[Row(2, 46)]
		//[Row(2, 47)]
		//[Row(2, 48)]
		//[Row(2, 49)]
		//[Row(2, 50)]
		//[Row(2, 51)]
		//[Row(2, 52)]
		//[Row(2, 53)]
		//[Row(2, 54)]
		//[Row(2, 55)]
		//[Row(2, 56)]
		//[Row(2, 57)]
		//[Row(2, 58)]
		//[Row(2, 59)]
		//[Row(2, 60)]
		//[Row(2, 61)]
		//[Row(2, 62)]
		//[Row(2, 63)]
		//[Row(UInt64.MaxValue, 0)]
		//[Row(UInt64.MaxValue, 1)]
		//[Row(UInt64.MaxValue, 2)]
		//[Row(UInt64.MaxValue, 3)]
		//[Row(UInt64.MaxValue, 4)]
		//[Row(UInt64.MaxValue, 5)]
		//[Row(UInt64.MaxValue, 6)]
		//[Row(UInt64.MaxValue, 7)]
		//[Row(UInt64.MaxValue, 8)]
		//[Row(UInt64.MaxValue, 9)]
		//[Row(UInt64.MaxValue, 10)]
		//[Row(UInt64.MaxValue, 11)]
		//[Row(UInt64.MaxValue, 12)]
		//[Row(UInt64.MaxValue, 13)]
		//[Row(UInt64.MaxValue, 14)]
		//[Row(UInt64.MaxValue, 15)]
		//[Row(UInt64.MaxValue, 16)]
		//[Row(UInt64.MaxValue, 17)]
		//[Row(UInt64.MaxValue, 18)]
		//[Row(UInt64.MaxValue, 19)]
		//[Row(UInt64.MaxValue, 20)]
		//[Row(UInt64.MaxValue, 21)]
		//[Row(UInt64.MaxValue, 22)]
		//[Row(UInt64.MaxValue, 23)]
		//[Row(UInt64.MaxValue, 24)]
		//[Row(UInt64.MaxValue, 25)]
		//[Row(UInt64.MaxValue, 26)]
		//[Row(UInt64.MaxValue, 27)]
		//[Row(UInt64.MaxValue, 28)]
		//[Row(UInt64.MaxValue, 29)]
		//[Row(UInt64.MaxValue, 30)]
		//[Row(UInt64.MaxValue, 31)]
		//[Row(UInt64.MaxValue, 32)]
		//[Row(UInt64.MaxValue, 33)]
		//[Row(UInt64.MaxValue, 34)]
		//[Row(UInt64.MaxValue, 35)]
		//[Row(UInt64.MaxValue, 36)]
		//[Row(UInt64.MaxValue, 37)]
		//[Row(UInt64.MaxValue, 38)]
		//[Row(UInt64.MaxValue, 39)]
		//[Row(UInt64.MaxValue, 40)]
		//[Row(UInt64.MaxValue, 41)]
		//[Row(UInt64.MaxValue, 42)]
		//[Row(UInt64.MaxValue, 43)]
		//[Row(UInt64.MaxValue, 44)]
		//[Row(UInt64.MaxValue, 45)]
		//[Row(UInt64.MaxValue, 46)]
		//[Row(UInt64.MaxValue, 47)]
		//[Row(UInt64.MaxValue, 48)]
		//[Row(UInt64.MaxValue, 49)]
		//[Row(UInt64.MaxValue, 50)]
		//[Row(UInt64.MaxValue, 51)]
		//[Row(UInt64.MaxValue, 52)]
		//[Row(UInt64.MaxValue, 53)]
		//[Row(UInt64.MaxValue, 54)]
		//[Row(UInt64.MaxValue, 55)]
		//[Row(UInt64.MaxValue, 56)]
		//[Row(UInt64.MaxValue, 57)]
		//[Row(UInt64.MaxValue, 58)]
		//[Row(UInt64.MaxValue, 59)]
		//[Row(UInt64.MaxValue, 60)]
		//[Row(UInt64.MaxValue, 61)]
		//[Row(UInt64.MaxValue, 62)]
		//[Row(UInt64.MaxValue, 63)]
		//[Row(UInt64.MaxValue - 1, 0)]
		//[Row(UInt64.MaxValue - 1, 1)]
		//[Row(UInt64.MaxValue - 1, 2)]
		//[Row(UInt64.MaxValue - 1, 3)]
		//[Row(UInt64.MaxValue - 1, 4)]
		//[Row(UInt64.MaxValue - 1, 5)]
		//[Row(UInt64.MaxValue - 1, 6)]
		//[Row(UInt64.MaxValue - 1, 7)]
		//[Row(UInt64.MaxValue - 1, 8)]
		//[Row(UInt64.MaxValue - 1, 9)]
		//[Row(UInt64.MaxValue - 1, 10)]
		//[Row(UInt64.MaxValue - 1, 11)]
		//[Row(UInt64.MaxValue - 1, 12)]
		//[Row(UInt64.MaxValue - 1, 13)]
		//[Row(UInt64.MaxValue - 1, 14)]
		//[Row(UInt64.MaxValue - 1, 15)]
		//[Row(UInt64.MaxValue - 1, 16)]
		//[Row(UInt64.MaxValue - 1, 17)]
		//[Row(UInt64.MaxValue - 1, 18)]
		//[Row(UInt64.MaxValue - 1, 19)]
		//[Row(UInt64.MaxValue - 1, 20)]
		//[Row(UInt64.MaxValue - 1, 21)]
		//[Row(UInt64.MaxValue - 1, 22)]
		//[Row(UInt64.MaxValue - 1, 23)]
		//[Row(UInt64.MaxValue - 1, 24)]
		//[Row(UInt64.MaxValue - 1, 25)]
		//[Row(UInt64.MaxValue - 1, 26)]
		//[Row(UInt64.MaxValue - 1, 27)]
		//[Row(UInt64.MaxValue - 1, 28)]
		//[Row(UInt64.MaxValue - 1, 29)]
		//[Row(UInt64.MaxValue - 1, 30)]
		//[Row(UInt64.MaxValue - 1, 31)]
		//[Row(UInt64.MaxValue - 1, 32)]
		//[Row(UInt64.MaxValue - 1, 33)]
		//[Row(UInt64.MaxValue - 1, 34)]
		//[Row(UInt64.MaxValue - 1, 35)]
		//[Row(UInt64.MaxValue - 1, 36)]
		//[Row(UInt64.MaxValue - 1, 37)]
		//[Row(UInt64.MaxValue - 1, 38)]
		//[Row(UInt64.MaxValue - 1, 39)]
		//[Row(UInt64.MaxValue - 1, 40)]
		//[Row(UInt64.MaxValue - 1, 41)]
		//[Row(UInt64.MaxValue - 1, 42)]
		//[Row(UInt64.MaxValue - 1, 43)]
		//[Row(UInt64.MaxValue - 1, 44)]
		//[Row(UInt64.MaxValue - 1, 45)]
		//[Row(UInt64.MaxValue - 1, 46)]
		//[Row(UInt64.MaxValue - 1, 47)]
		//[Row(UInt64.MaxValue - 1, 48)]
		//[Row(UInt64.MaxValue - 1, 49)]
		//[Row(UInt64.MaxValue - 1, 50)]
		//[Row(UInt64.MaxValue - 1, 51)]
		//[Row(UInt64.MaxValue - 1, 52)]
		//[Row(UInt64.MaxValue - 1, 53)]
		//[Row(UInt64.MaxValue - 1, 54)]
		//[Row(UInt64.MaxValue - 1, 55)]
		//[Row(UInt64.MaxValue - 1, 56)]
		//[Row(UInt64.MaxValue - 1, 57)]
		//[Row(UInt64.MaxValue - 1, 58)]
		//[Row(UInt64.MaxValue - 1, 59)]
		//[Row(UInt64.MaxValue - 1, 60)]
		//[Row(UInt64.MaxValue - 1, 61)]
		//[Row(UInt64.MaxValue - 1, 62)]
		//[Row(UInt64.MaxValue - 1, 63)]
		//[Row(UInt32.MaxValue, 0)]
		//[Row(UInt32.MaxValue, 1)]
		//[Row(UInt32.MaxValue, 2)]
		//[Row(UInt32.MaxValue, 3)]
		//[Row(UInt32.MaxValue, 4)]
		//[Row(UInt32.MaxValue, 5)]
		//[Row(UInt32.MaxValue, 6)]
		//[Row(UInt32.MaxValue, 7)]
		//[Row(UInt32.MaxValue, 8)]
		//[Row(UInt32.MaxValue, 9)]
		//[Row(UInt32.MaxValue, 10)]
		//[Row(UInt32.MaxValue, 11)]
		//[Row(UInt32.MaxValue, 12)]
		//[Row(UInt32.MaxValue, 13)]
		//[Row(UInt32.MaxValue, 14)]
		//[Row(UInt32.MaxValue, 15)]
		//[Row(UInt32.MaxValue, 16)]
		//[Row(UInt32.MaxValue, 17)]
		//[Row(UInt32.MaxValue, 18)]
		//[Row(UInt32.MaxValue, 19)]
		//[Row(UInt32.MaxValue, 20)]
		//[Row(UInt32.MaxValue, 21)]
		//[Row(UInt32.MaxValue, 22)]
		//[Row(UInt32.MaxValue, 23)]
		//[Row(UInt32.MaxValue, 24)]
		//[Row(UInt32.MaxValue, 25)]
		//[Row(UInt32.MaxValue, 26)]
		//[Row(UInt32.MaxValue, 27)]
		//[Row(UInt32.MaxValue, 28)]
		//[Row(UInt32.MaxValue, 29)]
		//[Row(UInt32.MaxValue, 30)]
		//[Row(UInt32.MaxValue, 31)]
		//[Row(UInt32.MaxValue, 32)]
		//[Row(UInt32.MaxValue, 33)]
		//[Row(UInt32.MaxValue, 34)]
		//[Row(UInt32.MaxValue, 35)]
		//[Row(UInt32.MaxValue, 36)]
		//[Row(UInt32.MaxValue, 37)]
		//[Row(UInt32.MaxValue, 38)]
		//[Row(UInt32.MaxValue, 39)]
		//[Row(UInt32.MaxValue, 40)]
		//[Row(UInt32.MaxValue, 41)]
		//[Row(UInt32.MaxValue, 42)]
		//[Row(UInt32.MaxValue, 43)]
		//[Row(UInt32.MaxValue, 44)]
		//[Row(UInt32.MaxValue, 45)]
		//[Row(UInt32.MaxValue, 46)]
		//[Row(UInt32.MaxValue, 47)]
		//[Row(UInt32.MaxValue, 48)]
		//[Row(UInt32.MaxValue, 49)]
		//[Row(UInt32.MaxValue, 50)]
		//[Row(UInt32.MaxValue, 51)]
		//[Row(UInt32.MaxValue, 52)]
		//[Row(UInt32.MaxValue, 53)]
		//[Row(UInt32.MaxValue, 54)]
		//[Row(UInt32.MaxValue, 55)]
		//[Row(UInt32.MaxValue, 56)]
		//[Row(UInt32.MaxValue, 57)]
		//[Row(UInt32.MaxValue, 58)]
		//[Row(UInt32.MaxValue, 59)]
		//[Row(UInt32.MaxValue, 60)]
		//[Row(UInt32.MaxValue, 61)]
		//[Row(UInt32.MaxValue, 62)]
		//[Row(UInt32.MaxValue, 63)]
		//[Row(UInt32.MaxValue - 1, 0)]
		//[Row(UInt32.MaxValue - 1, 1)]
		//[Row(UInt32.MaxValue - 1, 2)]
		//[Row(UInt32.MaxValue - 1, 3)]
		//[Row(UInt32.MaxValue - 1, 4)]
		//[Row(UInt32.MaxValue - 1, 5)]
		//[Row(UInt32.MaxValue - 1, 6)]
		//[Row(UInt32.MaxValue - 1, 7)]
		//[Row(UInt32.MaxValue - 1, 8)]
		//[Row(UInt32.MaxValue - 1, 9)]
		//[Row(UInt32.MaxValue - 1, 10)]
		//[Row(UInt32.MaxValue - 1, 11)]
		//[Row(UInt32.MaxValue - 1, 12)]
		//[Row(UInt32.MaxValue - 1, 13)]
		//[Row(UInt32.MaxValue - 1, 14)]
		//[Row(UInt32.MaxValue - 1, 15)]
		//[Row(UInt32.MaxValue - 1, 16)]
		//[Row(UInt32.MaxValue - 1, 17)]
		//[Row(UInt32.MaxValue - 1, 18)]
		//[Row(UInt32.MaxValue - 1, 19)]
		//[Row(UInt32.MaxValue - 1, 20)]
		//[Row(UInt32.MaxValue - 1, 21)]
		//[Row(UInt32.MaxValue - 1, 22)]
		//[Row(UInt32.MaxValue - 1, 23)]
		//[Row(UInt32.MaxValue - 1, 24)]
		//[Row(UInt32.MaxValue - 1, 25)]
		//[Row(UInt32.MaxValue - 1, 26)]
		//[Row(UInt32.MaxValue - 1, 27)]
		//[Row(UInt32.MaxValue - 1, 28)]
		//[Row(UInt32.MaxValue - 1, 29)]
		//[Row(UInt32.MaxValue - 1, 30)]
		//[Row(UInt32.MaxValue - 1, 31)]
		//[Row(UInt32.MaxValue - 1, 32)]
		//[Row(UInt32.MaxValue - 1, 33)]
		//[Row(UInt32.MaxValue - 1, 34)]
		//[Row(UInt32.MaxValue - 1, 35)]
		//[Row(UInt32.MaxValue - 1, 36)]
		//[Row(UInt32.MaxValue - 1, 37)]
		//[Row(UInt32.MaxValue - 1, 38)]
		//[Row(UInt32.MaxValue - 1, 39)]
		//[Row(UInt32.MaxValue - 1, 40)]
		//[Row(UInt32.MaxValue - 1, 41)]
		//[Row(UInt32.MaxValue - 1, 42)]
		//[Row(UInt32.MaxValue - 1, 43)]
		//[Row(UInt32.MaxValue - 1, 44)]
		//[Row(UInt32.MaxValue - 1, 45)]
		//[Row(UInt32.MaxValue - 1, 46)]
		//[Row(UInt32.MaxValue - 1, 47)]
		//[Row(UInt32.MaxValue - 1, 48)]
		//[Row(UInt32.MaxValue - 1, 49)]
		//[Row(UInt32.MaxValue - 1, 50)]
		//[Row(UInt32.MaxValue - 1, 51)]
		//[Row(UInt32.MaxValue - 1, 52)]
		//[Row(UInt32.MaxValue - 1, 53)]
		//[Row(UInt32.MaxValue - 1, 54)]
		//[Row(UInt32.MaxValue - 1, 55)]
		//[Row(UInt32.MaxValue - 1, 56)]
		//[Row(UInt32.MaxValue - 1, 57)]
		//[Row(UInt32.MaxValue - 1, 58)]
		//[Row(UInt32.MaxValue - 1, 59)]
		//[Row(UInt32.MaxValue - 1, 60)]
		//[Row(UInt32.MaxValue - 1, 61)]
		//[Row(UInt32.MaxValue - 1, 62)]
		//[Row(UInt32.MaxValue - 1, 63)]
		//[Row(17, 0)]
		//[Row(17, 1)]
		//[Row(17, 2)]
		//[Row(17, 3)]
		//[Row(17, 4)]
		//[Row(17, 5)]
		//[Row(17, 6)]
		//[Row(17, 7)]
		//[Row(17, 8)]
		//[Row(17, 9)]
		//[Row(17, 10)]
		//[Row(17, 11)]
		//[Row(17, 12)]
		//[Row(17, 13)]
		//[Row(17, 14)]
		//[Row(17, 15)]
		//[Row(17, 16)]
		//[Row(17, 17)]
		//[Row(17, 18)]
		//[Row(17, 19)]
		//[Row(17, 20)]
		//[Row(17, 21)]
		//[Row(17, 22)]
		//[Row(17, 23)]
		//[Row(17, 24)]
		//[Row(17, 25)]
		//[Row(17, 26)]
		//[Row(17, 27)]
		//[Row(17, 28)]
		//[Row(17, 29)]
		//[Row(17, 30)]
		//[Row(17, 31)]
		//[Row(17, 32)]
		//[Row(17, 33)]
		//[Row(17, 34)]
		//[Row(17, 35)]
		//[Row(17, 36)]
		//[Row(17, 37)]
		//[Row(17, 38)]
		//[Row(17, 39)]
		//[Row(17, 40)]
		//[Row(17, 41)]
		//[Row(17, 42)]
		//[Row(17, 43)]
		//[Row(17, 44)]
		//[Row(17, 45)]
		//[Row(17, 46)]
		//[Row(17, 47)]
		//[Row(17, 48)]
		//[Row(17, 49)]
		//[Row(17, 50)]
		//[Row(17, 51)]
		//[Row(17, 52)]
		//[Row(17, 53)]
		//[Row(17, 54)]
		//[Row(17, 55)]
		//[Row(17, 56)]
		//[Row(17, 57)]
		//[Row(17, 58)]
		//[Row(17, 59)]
		//[Row(17, 60)]
		//[Row(17, 61)]
		//[Row(17, 62)]
		//[Row(17, 63)]
		//[Row(123, 0)]
		//[Row(123, 1)]
		//[Row(123, 2)]
		//[Row(123, 3)]
		//[Row(123, 4)]
		//[Row(123, 5)]
		//[Row(123, 6)]
		//[Row(123, 7)]
		//[Row(123, 8)]
		//[Row(123, 9)]
		//[Row(123, 10)]
		//[Row(123, 11)]
		//[Row(123, 12)]
		//[Row(123, 13)]
		//[Row(123, 14)]
		//[Row(123, 15)]
		//[Row(123, 16)]
		//[Row(123, 17)]
		//[Row(123, 18)]
		//[Row(123, 19)]
		//[Row(123, 20)]
		//[Row(123, 21)]
		//[Row(123, 22)]
		//[Row(123, 23)]
		//[Row(123, 24)]
		//[Row(123, 25)]
		//[Row(123, 26)]
		//[Row(123, 27)]
		//[Row(123, 28)]
		//[Row(123, 29)]
		//[Row(123, 30)]
		//[Row(123, 31)]
		//[Row(123, 32)]
		//[Row(123, 33)]
		//[Row(123, 34)]
		//[Row(123, 35)]
		//[Row(123, 36)]
		//[Row(123, 37)]
		//[Row(123, 38)]
		//[Row(123, 39)]
		//[Row(123, 40)]
		//[Row(123, 41)]
		//[Row(123, 42)]
		//[Row(123, 43)]
		//[Row(123, 44)]
		//[Row(123, 45)]
		//[Row(123, 46)]
		//[Row(123, 47)]
		//[Row(123, 48)]
		//[Row(123, 49)]
		//[Row(123, 50)]
		//[Row(123, 51)]
		//[Row(123, 52)]
		//[Row(123, 53)]
		//[Row(123, 54)]
		//[Row(123, 55)]
		//[Row(123, 56)]
		//[Row(123, 57)]
		//[Row(123, 58)]
		//[Row(123, 59)]
		//[Row(123, 60)]
		//[Row(123, 61)]
		//[Row(123, 62)]
		//[Row(123, 63)]
		//[Test, Author("tgiphil", "phil@thinkedge.com")]
		//public void Shr(ulong first, int second)
		//{
		//    this.logicTests.Shr((first >> second), first, second);
		//}

		//#endregion // Shr

        #region Ceq

        [Row(true, 0UL, 0UL)]
        [Row(false, 0UL, 1UL)]
        [Row(true, 1UL, 1UL)]
        [Row(false, 1UL, 0UL)]
        [Row(true, ulong.MinValue, ulong.MinValue)]
        [Row(true, ulong.MaxValue, ulong.MaxValue)]
        [Row(false, ulong.MinValue, ulong.MaxValue)]
        [Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
        public void Ceq(bool expectedValue, ulong first, ulong second)
        {
            this.comparisonTests.Ceq(expectedValue, first, second);
        }

        #endregion // Ceq

        #region Newarr

        [Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
        public void Newarr()
        {
            this.arrayTests.Newarr();
        }

        #endregion // Newarr

        #region Ldlen

        [Row(0)]
        [Row(1)]
        [Row(10)]
        [Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
        public void Ldlen(int length)
        {
            this.arrayTests.Ldlen(length);
        }

        #endregion // Ldlen

        #region Stelem

        [Row(0, UInt64.MinValue)]
        [Row(0, 1)]
        [Row(0, UInt64.MaxValue)]
        [Row(3, UInt64.MinValue)]
        [Row(6, 1)]
        [Row(2, Int32.MaxValue)]
        [Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
        public void Stelem(int index, ulong value)
        {
            this.arrayTests.Stelem(index, value);
        }

        #endregion // Stelem

        #region Ldelem

        [Row(0, UInt64.MinValue)]
        [Row(0, 1)]
        [Row(0, UInt64.MaxValue)]
        [Row(3, UInt64.MinValue)]
        [Row(6, 1)]
        [Row(2, UInt64.MaxValue)]
        [Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
        public void Ldelem(int index, ulong value)
        {
            this.arrayTests.Ldelem(index, value);
        }

        #endregion // Ldelem

        #region Ldelema

        [Row(0, UInt64.MinValue)]
        [Row(0, 1)]
        [Row(0, UInt64.MaxValue)]
        [Row(3, UInt64.MinValue)]
        [Row(6, 1)]
        [Row(2, UInt64.MaxValue)]
        [Test, Author(@"Michael Fröhlich, sharpos@michaelruck.de")]
        public void Ldelema(int index, ulong value)
        {
            this.arrayTests.Ldelema(index, value);
        }

        #endregion // Ldelema
    }
}
