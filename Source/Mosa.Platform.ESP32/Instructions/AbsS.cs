// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.

using Mosa.Compiler.Framework;

namespace Mosa.Platform.ESP32.Instructions
{
	/// <summary>
	/// AbsS - Absolute Value Single, ABS.S computes the single-precision absolute value of the contents of floating-point register fs and writes the result to floating-point register fr.
	/// </summary>
	/// <seealso cref="Mosa.Platform.ESP32.ESP32Instruction" />
	public sealed class AbsS : ESP32Instruction
	{
		public override int ID { get { return 693; } }

		internal AbsS()
			: base(1, 2)
		{
		}

		public override void Emit(InstructionNode node, BaseCodeEmitter emitter)
		{
			System.Diagnostics.Debug.Assert(node.ResultCount == 1);
			System.Diagnostics.Debug.Assert(node.OperandCount == 2);

			emitter.OpcodeEncoder.AppendNibble(0b1111);
			emitter.OpcodeEncoder.AppendNibble(0b1010);
			emitter.OpcodeEncoder.AppendNibble(node.Result.Register.RegisterCode);
			emitter.OpcodeEncoder.AppendNibble(node.Operand1.Register.RegisterCode);
			emitter.OpcodeEncoder.AppendNibble(0b0001);
			emitter.OpcodeEncoder.AppendNibble(0b0000);
		}
	}
}
