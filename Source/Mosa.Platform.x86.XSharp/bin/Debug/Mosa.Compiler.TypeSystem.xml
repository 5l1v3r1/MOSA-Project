<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mosa.Compiler.TypeSystem</name>
    </assembly>
    <members>
        <member name="T:Mosa.Compiler.TypeSystem.Cil.CilRuntimeField">
            <summary>
            A CIL specialization of <see cref="T:Mosa.Compiler.TypeSystem.RuntimeField"/>.
            </summary>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.RuntimeField">
            <summary>
            Base class for the runtime representation of fields.
            </summary>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.RuntimeMember">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.RuntimeObject">
            <summary>
            Base class of all runtime type system objects.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeObject.token">
            <summary>
            Holds the token of the object.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeObject.module">
            <summary>
            Holds the module from which this object originated
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeObject.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.Metadata.Token)">
            <summary>
            Initializes a new instance of <see cref="T:Mosa.Compiler.TypeSystem.RuntimeObject"/>.
            </summary>
            <param name="module">The module.</param>
            <param name="token">The runtime token of this metadata.</param>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeObject.Token">
            <summary>
            Retrieves the token of the object.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeObject.Module">
            <summary>
            Retrieves the module from which this object originated
            </summary>
            <value>The module.</value>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.IRuntimeAttributable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.IRuntimeAttributable.IsDefined(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Determines if the given attribute type is applied.
            </summary>
            <param name="attributeType">The type of the attribute to check.</param>
            <returns>The return value is true, if the attribute is applied. Otherwise false.</returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.IRuntimeAttributable.CustomAttributes">
            <summary>
            Gets the custom attributes.
            </summary>
            <value>The custom attributes.</value>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMember.attributes">
            <summary>
            Holds the attributes of the member.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMember.declaringType">
            <summary>
            Specifies the type, that declares the member.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMember.name">
            <summary>
            Holds the (cached) name of the type.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeMember.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Initializes a new instance of <see cref="T:Mosa.Compiler.TypeSystem.RuntimeMember"/>.
            </summary>
            <param name="module">The module.</param>
            <param name="token">Holds the token of this runtime metadata.</param>
            <param name="declaringType">The declaring type of the member.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeMember.IsDefined(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Determines if the given attribute type is applied.
            </summary>
            <param name="attributeType">The type of the attribute to check.</param>
            <returns>
            The return value is true, if the attribute is applied. Otherwise false.
            </returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMember.DeclaringType">
            <summary>
            Retrieves the declaring type of the member.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMember.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMember.CustomAttributes">
            <summary>
            Returns the attributes of the type.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeField.attributes">
            <summary>
            Holds the attributes of the RuntimeField.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeField.rva">
            <summary>
            Holds the relative virtual address of the field.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeField.signature">
            <summary>
            Holds the type of the field.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeField.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Initializes a new instance of <see cref="T:Mosa.Compiler.TypeSystem.RuntimeField"/>.
            </summary>
            <param name="module">The module.</param>
            <param name="declaringType">Specifies the type, which contains this field.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeField.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Initializes a new instance of <see cref="T:Mosa.Compiler.TypeSystem.RuntimeField"/>.
            </summary>
            <param name="module">The module.</param>
            <param name="token">The token.</param>
            <param name="declaringType">Specifies the type, which contains this field.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeField.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeField.Attributes">
            <summary>
            Gets the attributes of the field.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeField.RVA">
            <summary>
            Gets the RVA of the initialization data.
            </summary>
            <value>The RVA of the initialization data.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeField.SignatureType">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.Cil.CilRuntimeField.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,System.String,Mosa.Compiler.Metadata.Signatures.FieldSignature,Mosa.Compiler.Metadata.Token,System.UInt32,System.UInt32,Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.Metadata.FieldAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.Cil.CilRuntimeField"/> class.
            </summary>
            <param name="module">The module.</param>
            <param name="name">The name.</param>
            <param name="signature">The signature.</param>
            <param name="token">The token.</param>
            <param name="offset">The offset.</param>
            <param name="rva">The rva.</param>
            <param name="declaringType">Type of the declaring.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.Cil.CilRuntimeMethod">
            <summary>
            A CIL specialization of <see cref="T:Mosa.Compiler.TypeSystem.RuntimeMethod"/>.
            </summary>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.RuntimeMethod">
            <summary>
            Base class for the runtime representation of methods.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMethod.implFlags">
            <summary>
            The implementation attributes of the method.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMethod.attributes">
            <summary>
            Generic attributes of the method.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMethod.signature">
            <summary>
            Holds the signature of the method.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMethod.parameters">
            <summary>
            Holds the list of parameters of the method.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMethod.rva">
            <summary>
            Holds the rva of the MSIL of the method.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMethod.genericParameters">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMethod.fullName">
            <summary>
            Holds the full method name
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeMethod.methodName">
            <summary>
            Holds the method name
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeMethod.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.RuntimeMethod"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="declaringType">The type, which declared this method.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeMethod.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.Attributes">
            <summary>
            Retrieves the method attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.IsGeneric">
            <summary>
            Determines if the method is a generic method.
            </summary>
            <value>
            	<c>true</c> if this instance is generic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.IsAbstract">
            <summary>
            Gets a value indicating whether this instance is abstract.
            </summary>
            <value>
            	<c>true</c> if this instance is abstract; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.IsNative">
            <summary>
            Gets a value indicating whether this instance is native.
            </summary>
            <value>
              <c>true</c> if this instance is native; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.InstructionStream">
            <summary>
            Gets the instruction stream.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.ImplAttributes">
            <summary>
            Gets the method implementation attributes.
            </summary>
            <value>The impl attributes.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.Parameters">
            <summary>
            Returns the parameter definitions of this method.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.Signature">
            <summary>
            Retrieves the signature of the method.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.Rva">
            <summary>
            Holds the RVA of the method in the binary.
            </summary>
            <value>The rva.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.GenericParameters">
            <summary>
            Returns the interfaces implemented by this type.
            </summary>
            <value>A list of interfaces.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.FullName">
            <summary>
            Gets the full name.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeMethod.MethodName">
            <summary>
            Gets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.Cil.CilRuntimeMethod.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,System.String,Mosa.Compiler.Metadata.Signatures.MethodSignature,Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.Metadata.MethodAttributes,Mosa.Compiler.Metadata.MethodImplAttributes,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.Cil.CilRuntimeMethod"/> class.
            </summary>
            <param name="module">The module.</param>
            <param name="name">The name.</param>
            <param name="signature">The signature.</param>
            <param name="token">The token.</param>
            <param name="declaringType">Type of the declaring.</param>
            <param name="methodAttributes">The method attributes.</param>
            <param name="methodImplAttributes">The method impl attributes.</param>
            <param name="rva">The rva.</param>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.Cil.CilRuntimeType">
            <summary>
            Runtime representation of a CIL type.
            </summary>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.RuntimeType">
            <summary>
            Internal runtime representation of a type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.baseType">
            <summary>
            Holds the base type of this type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.flags">
            <summary>
            Holds the type flag.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.nameSpace">
            <summary>
            Holds the (cached) namespace of the type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.layoutSize">
            <summary>
            Holds the calculated native size of the type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.packing">
            <summary>
            Holds the field packing.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.methods">
            <summary>
            Methods of the type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.fields">
            <summary>
            Holds the fields of this type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.interfaces">
            <summary>
            Holds the interfaces of this type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.isValueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.isDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.isEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeType.genericParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeType.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.RuntimeType"/> class.
            </summary>
            <param name="module">The module.</param>
            <param name="token">The token of the type.</param>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeType.IsAssignableFrom(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Determines whether instances of <paramref name="type"/> can be assigned to variables of this type.
            </summary>
            <param name="type">The type to check assignment for.</param>
            <returns>
            	<c>true</c> if <paramref name="type "/> is assignable to this type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeType.IsSubclassOf(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Determines whether the class represented by this RuntimeType is a subclass of the type represented by c.
            </summary>
            <param name="c">The type to compare with the current type.</param>
            <returns>
            <c>true</c> if the Type represented by the c parameter and the current Type represent classes, and the 
            class represented by the current Type derives From the class represented by c; otherwise, <c>false</c>. 
            This method also returns <c>false</c> if c and the current Type represent the same class.
            </returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeType.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.BaseType">
            <summary>
            Retrieves the base class of the represented type.
            </summary>
            <value>The extends.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.IsGeneric">
            <summary>
            Determines if the type has generic arguments.
            </summary>
            <value>
            	<c>true</c> if this instance is generic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.IsValueType">
            <summary>
            Gets a value indicating whether this instance is value type.
            </summary>
            <value>
            	<c>true</c> if this instance is value type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.IsModule">
            <summary>
            Gets a value indicating whether type is a module.
            </summary>
            <value><c>true</c> if this instance is module; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.Fields">
            <summary>
            Returns the fields of the type.
            </summary>
            <value>The fields.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.Interfaces">
            <summary>
            Returns the interfaces implemented by this type.
            </summary>
            <value>A list of interfaces.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.Methods">
            <summary>
            Returns the methods of the type.
            </summary>
            <value>The methods.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.Namespace">
            <summary>
            Retrieves the namespace of the represented type.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.FullName">
            <summary>
            Gets the full name of the type.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.Pack">
            <summary>
            Gets the packing of type fields.
            </summary>
            <value>The packing of type fields.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.LayoutSize">
            <summary>
            Gets or sets the size of the type.
            </summary>
            <value>The size of the type.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.TypeInitializer">
            <summary>
            Gets the type initializer.
            </summary>
            <value>The type initializer.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeType.GenericParameters">
            <summary>
            Returns the interfaces implemented by this type.
            </summary>
            <value>A list of interfaces.</value>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.Cil.CilRuntimeType.baseTypeToken">
            <summary>
            Holds the token of the base type of this type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.Cil.CilRuntimeType.enclosingType">
            <summary>
            Holds the enclosing type, if any.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.Cil.CilRuntimeType.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,System.String,System.String,System.Int32,System.Int32,Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.Metadata.TypeAttributes,Mosa.Compiler.Metadata.Token)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.Cil.CilRuntimeType"/> class.
            </summary>
            <param name="module">The module.</param>
            <param name="name">The name.</param>
            <param name="typeNamespace">The type namespace.</param>
            <param name="packing">The packing.</param>
            <param name="size">The size.</param>
            <param name="token">The token.</param>
            <param name="baseType">Type of the base.</param>
            <param name="enclosingType">Type of the enclosing.</param>
            <param name="attributes">The attributes.</param>
            <param name="baseToken">The base token.</param>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.DelegateTypePatcher">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.alreadyPatched">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.ConstructorName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.InvokeMethodName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.BeginInvokeMethodName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.EndInvokeMethodName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.InstanceFieldName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.MethodPtrFieldName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.typeSystem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.DelegateTypePatcher.delegateStub">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.#ctor(Mosa.Compiler.TypeSystem.ITypeSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.DelegateTypePatcher"/> class.
            </summary>
            <param name="typeSystem">The type system.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.PatchType(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Patches the type.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.LoadDelegateStub">
            <summary>
            Loads the delegate stub.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndInsertFields(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates and inserts fields.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndInsertInstanceField(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates and inserts the instance field.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndInsertMethodPtrField(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates and inserts the method pointer field.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndReplaceMethods(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates and replace methods.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndReplaceConstructor(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates and replace constructor.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndReplaceInvokeMethod(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates and replace invoke method.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndReplaceInvokeWithReturnMethod(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates the and replace invoke with return method.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndReplaceBeginInvokeMethod(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates the and replace begin invoke method.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.GenerateAndReplaceEndInvokeMethod(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Generates the and replace end invoke method.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.DelegateTypePatcher.SearchAndReplaceMethod(Mosa.Compiler.TypeSystem.RuntimeType,System.String,Mosa.Compiler.TypeSystem.RuntimeMethod)">
            <summary>
            Searches and replaces the method.
            </summary>
            <param name="type">The type.</param>
            <param name="methodName">Name of the method.</param>
            <param name="methodToReplace">The method to replace.</param>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.GenericTypePatcher">
            <summary>
            Patches a generic type with the actual set of generic type parameters used in an instantiation.
            E.g. an instantiation of Foo&lt;T&gt; with "int" for T will replace all occurrences of T
            inside Foo&lt;T&gt; with "int" in each member and each method's instruction stream.
            </summary>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.IGenericTypePatcher">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.IGenericTypePatcher.PatchType(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.Generic.CilGenericType,Mosa.Compiler.TypeSystem.Generic.CilGenericType)">
            <summary>
            Patches the type.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="enclosingType">Type of the enclosing.</param>
            <param name="openType">Type of the open.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.IGenericTypePatcher.PatchField(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.Generic.CilGenericType,Mosa.Compiler.TypeSystem.RuntimeField)">
            <summary>
            Patches the field.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="closedType">Type of the closed.</param>
            <param name="openField">The open field.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.IGenericTypePatcher.PatchMethod(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.Generic.CilGenericType,Mosa.Compiler.TypeSystem.RuntimeMethod)">
            <summary>
            Patches the method.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="enclosingType">Type of the enclosing.</param>
            <param name="openMethod">The open method.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.IGenericTypePatcher.PatchSignatureType(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.Metadata.Token)">
            <summary>
            Patches the type of the signature.
            </summary>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.IGenericTypePatcher.CloseGenericArguments(Mosa.Compiler.Metadata.Signatures.SigType[],Mosa.Compiler.Metadata.Signatures.SigType[])">
            <summary>
            Closes the generic arguments.
            </summary>
            <param name="enclosingType">Type of the enclosing.</param>
            <param name="openType">Type of the open.</param>
            <returns></returns>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.GenericTypePatcher.typeTokenCounter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.GenericTypePatcher.signatureTokenCounter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.GenericTypePatcher.typeSystem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.GenericTypePatcher.typeDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.#ctor(Mosa.Compiler.TypeSystem.ITypeSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.GenericTypePatcher"/> class.
            </summary>
            <param name="typeSystem">The type system.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.AddType(Mosa.Compiler.TypeSystem.Generic.CilGenericType,System.Int64)">
            <summary>
            Adds the type.
            </summary>
            <param name="type">The type.</param>
            <param name="signatureHash">The signature hash.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.PatchType(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.Generic.CilGenericType,Mosa.Compiler.TypeSystem.Generic.CilGenericType)">
            <summary>
            Patches the type.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="enclosingType">Type of the enclosing.</param>
            <param name="openType">Type of the open.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.PatchField(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.Generic.CilGenericType,Mosa.Compiler.TypeSystem.RuntimeField)">
            <summary>
            Patches the field.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="enclosingType">Type of the closed.</param>
            <param name="openField">The open field.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.ComputeSignatureHash(Mosa.Compiler.Metadata.Signatures.SigType[])">
            <summary>
            Computes the signature hash.
            </summary>
            <param name="signature">The signature.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.PatchSignatureType(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.Metadata.Token)">
            <summary>
            Patches the type of the signature.
            </summary>
            <param name="typemodule"></param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.CloseGenericArguments(Mosa.Compiler.TypeSystem.Generic.CilGenericType,Mosa.Compiler.TypeSystem.Generic.CilGenericType)">
            <summary>
            Closes the generic arguments.
            </summary>
            <param name="enclosingType">Type of the closed.</param>
            <param name="openType">Type of the open.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.CloseGenericArguments(Mosa.Compiler.TypeSystem.Generic.CilGenericType,Mosa.Compiler.Metadata.Signatures.GenericInstSigType)">
            <summary>
            Closes the generic arguments.
            </summary>
            <param name="enclosingType">Type of the enclosing.</param>
            <param name="openType">Type of the open.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.CloseGenericArguments(Mosa.Compiler.Metadata.Signatures.SigType[],Mosa.Compiler.Metadata.Signatures.SigType[])">
            <summary>
            Closes the generic arguments.
            </summary>
            <param name="enclosingType">Type of the enclosing.</param>
            <param name="openType">Type of the open.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericTypePatcher.PatchMethod(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.Generic.CilGenericType,Mosa.Compiler.TypeSystem.RuntimeMethod)">
            <summary>
            Patches the method.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="enclosingType">Type of the enclosing.</param>
            <param name="openMethod">The open method.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetAllTypes">
            <summary>
            Gets all types from module.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetType(System.String,System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="nameSpace">The name space.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetType(System.String)">
            <summary>
            Gets the type.
            </summary>
            <param name="fullname">The fullname.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetType(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the runtime type for a given metadata token.
            </summary>
            <param name="token">The token of the type to load. This can represent a typeref, typedef or typespec token.</param>
            <returns>The runtime type of the specified token.</returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetField(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the field definition identified by the given token in the scope.
            </summary>
            <param name="token">The token of the field to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetMethod(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the method definition identified by the given token in the scope.
            </summary>
            <param name="token">The token of the method to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetMethod(Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the method.
            </summary>
            <param name="token">The token.</param>
            <param name="callingType">Type of the calling.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetOpenGeneric(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the open generic.
            </summary>
            <param name="baseGenericType">Type of the base generic.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeModule.GetExternalName(Mosa.Compiler.Metadata.Token)">
            <summary>
            Gets the name of the external.
            </summary>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeModule.TypeSystem">
            <summary>
            Gets the type system.
            </summary>
            <value>The type system.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeModule.MetadataModule">
            <summary>
            Gets the metadata module.
            </summary>
            <value>The metadata module.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeModule.Name">
            <summary>
            Gets the module's name.
            </summary>
            <value>The module's name.</value>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.InternalTypeModule.typeSystem">
            <summary>
            Holds the type system
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.InternalTypeModule.types">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.InternalTypeModule.methods">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.InternalTypeModule.typeNames">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.#ctor(Mosa.Compiler.TypeSystem.ITypeSystem)">
            <summary>
            Initializes static data members of the type loader.
            </summary>
            <param name="typeSystem">The type system.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetAllTypes">
            <summary>
            Gets all types from module.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetType(System.String,System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="nameSpace">The name space.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetType(System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="fullname">The fullname.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetType(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the runtime type for a given metadata token.
            </summary>
            <param name="token">The token of the type to load. This can represent a typeref, typedef or typespec token.</param>
            <returns>The runtime type of the specified token.</returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetField(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the field definition identified by the given token in the scope.
            </summary>
            <param name="token">The token of the field to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetMethod(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the method definition identified by the given token in the scope.
            </summary>
            <param name="token">The token of the method to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetMethod(Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the method.
            </summary>
            <param name="token">The token.</param>
            <param name="callingType">Type of the calling.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetOpenGeneric(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the open generic.
            </summary>
            <param name="baseGenericType">Type of the base generic.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetExternalName(Mosa.Compiler.Metadata.Token)">
            <summary>
            Gets the name of the external.
            </summary>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.AddType(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Adds the type.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.InternalTypeModule.AddMethod(Mosa.Compiler.TypeSystem.RuntimeMethod)">
            <summary>
            Adds the method.
            </summary>
            <param name="method">The method.</param>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#TypeSystem">
            <summary>
            Gets the type system.
            </summary>
            <value>The type system.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#MetadataModule">
            <summary>
            Gets the metadata module.
            </summary>
            <value>The metadata module.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.InternalTypeModule.Mosa#Compiler#TypeSystem#ITypeModule#Name">
            <summary>
            Gets the module's name.
            </summary>
            <value>The module's name.</value>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.GenericParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.GenericParameter.flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.GenericParameter.name">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericParameter.#ctor(System.String,Mosa.Compiler.Metadata.GenericParameterAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.GenericParameter"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.GenericParameter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.GenericParameter.Flags">
            <summary>
            Gets the flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.GenericParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeLayout.GetMethodTableOffset(Mosa.Compiler.TypeSystem.RuntimeMethod)">
            <summary>
            Gets the method table offset.
            </summary>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeLayout.GetInterfaceSlotOffset(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the interface slot offset.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeLayout.GetTypeSize(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the size of the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeLayout.GetFieldSize(Mosa.Compiler.TypeSystem.RuntimeField)">
            <summary>
            Gets the size of the field.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeLayout.GetFieldOffset(Mosa.Compiler.TypeSystem.RuntimeField)">
            <summary>
            Gets the size of the field.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeLayout.GetMethodTable(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the type methods.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeLayout.GetInterfaceTable(Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the interface table.
            </summary>
            <param name="type">The type.</param>
            <param name="interfaceType">Type of the interface.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeLayout.GetTypeID(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the type ID.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeLayout.TypeSystem">
            <summary>
            Gets the type system.
            </summary>
            <value>The type system.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeLayout.NativePointerSize">
            <summary>
            Gets the size of the native pointer.
            </summary>
            <value>The size of the native pointer.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeLayout.NativePointerAlignment">
            <summary>
            Gets the native pointer alignment.
            </summary>
            <value>The native pointer alignment.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeLayout.Interfaces">
            <summary>
            Get a list of interfaces
            </summary>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.TypeLayout">
            <summary>
            Performs memory layout of a type for compilation.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.typeSystem">
            <summary>
            Holds the type system
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.nativePointerSize">
            <summary>
            Holds the Native Pointer Size
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.nativePointerAlignment">
            <summary>
            Holds the Native Pointer Alignment
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.typeIDs">
            <summary>
            Holds the global id for each type
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.interfaces">
            <summary>
            Holds a list of interfaces
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.methodTableOffsets">
            <summary>
            Holds the method table offsets value for each method
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.interfaceSlots">
            <summary>
            Holds the slot value for each interface
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.typeSizes">
            <summary>
            Holds the size of each type
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.fieldSizes">
            <summary>
            Holds the size of each field
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.fieldOffets">
            <summary>
            Holds the offset for each field
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeLayout.typeMethodTables">
            <summary>
            Holds a list of methods for each type
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.#ctor(Mosa.Compiler.TypeSystem.ITypeSystem,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.TypeLayout"/> class.
            </summary>
            <param name="typeSystem">The type system.</param>
            <param name="nativePointerSize">Size of the native pointer.</param>
            <param name="nativePointerAlignment">The native pointer alignment.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#GetMethodTableOffset(Mosa.Compiler.TypeSystem.RuntimeMethod)">
            <summary>
            Gets the method table offset.
            </summary>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#GetInterfaceSlotOffset(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the interface slot offset.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#GetTypeSize(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the size of the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#GetFieldSize(Mosa.Compiler.TypeSystem.RuntimeField)">
            <summary>
            Gets the size of the field.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#GetFieldOffset(Mosa.Compiler.TypeSystem.RuntimeField)">
            <summary>
            Gets the size of the field.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#GetMethodTable(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the type methods.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#GetInterfaceTable(Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the interface table.
            </summary>
            <param name="type">The type.</param>
            <param name="interfaceType">Type of the interface.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#GetTypeID(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the type ID.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.ResolveInterfaceType(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Builds a list of interfaces and assigns interface a unique index number
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.ResolveExplicitLayout(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Applies the explicit layout to the given type.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.GetMemorySize(Mosa.Compiler.Metadata.Signatures.SigType)">
            <summary>
            Gets the type memory requirements.
            </summary>
            <param name="signatureType">The signature type.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeLayout.GetAlignmentSize(Mosa.Compiler.Metadata.Signatures.SigType)">
            <summary>
            Gets the size of the type alignment.
            </summary>
            <param name="signatureType">The signature type.</param>
            <returns></returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#TypeSystem">
            <summary>
            Gets the type system.
            </summary>
            <value>The type system.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#NativePointerSize">
            <summary>
            Gets the size of the native pointer.
            </summary>
            <value>The size of the native pointer.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#NativePointerAlignment">
            <summary>
            Gets the native pointer alignment.
            </summary>
            <value>The native pointer alignment.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeLayout.Mosa#Compiler#TypeSystem#ITypeLayout#Interfaces">
            <summary>
            Get a list of interfaces
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.LoadModules(System.Collections.Generic.IList{Mosa.Compiler.Metadata.Loader.IMetadataModule})">
            <summary>
            Loads the modules.
            </summary>
            <param name="modules">The modules.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.GetType(System.String,System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="nameSpace">The name space.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.GetType(System.String,System.String,System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="nameSpace">The name space.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.GetType(System.String)">
            <summary>
            Gets the type.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.ResolveModuleReference(System.String)">
            <summary>
            Resolves the module reference.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.GetAllTypes">
            <summary>
            Gets all types from type system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.AddInternalType(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Adds the internal compiler defined type to the type system
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.GetOpenGeneric(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the open generic.
            </summary>
            <param name="baseGenericType">Type of the base generic.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.ITypeSystem.ResolveGenericType(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.Metadata.Signatures.TypeSpecSignature,Mosa.Compiler.Metadata.Token)">
            <summary>
            Resolves the type of the generic.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="typeSpecSignature">The type spec signature.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeSystem.TypeModules">
            <summary>
            Gets the type modules.
            </summary>
            <value>The type modules.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeSystem.InternalTypeModule">
            <summary>
            Gets the internal type module.
            </summary>
            <value>The internal type module.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.ITypeSystem.MainTypeModule">
            <summary>
            Gets the main type module.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeSystem.typeModules">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeSystem.internalTypeModule">
            <summary>
            Holds the type module for internally created types
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeSystem.mainTypeModule">
            <summary>
            Holds the main type module
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#LoadModules(System.Collections.Generic.IList{Mosa.Compiler.Metadata.Loader.IMetadataModule})">
            <summary>
            Loads the module.
            </summary>
            <param name="modules">The modules.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#ResolveModuleReference(System.String)">
            <summary>
            Adds the module reference.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#GetType(System.String,System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="nameSpace">The name space.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#GetType(System.String,System.String,System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="nameSpace">The name space.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#GetType(System.String)">
            <summary>
            Gets the type.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#GetAllTypes">
            <summary>
            Gets all types from type system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#AddInternalType(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Adds the internal compiler defined type to the type system
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#GetOpenGeneric(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the open generic.
            </summary>
            <param name="baseGenericType">Type of the base generic.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeSystem.InitializeInternalTypeModule">
            <summary>
            Initializes the internal type module.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#TypeModules">
            <summary>
            Gets the type modules.
            </summary>
            <value>The type modules.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#InternalTypeModule">
            <summary>
            Gets the internal type module.
            </summary>
            <value>The internal type module.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeSystem.Mosa#Compiler#TypeSystem#ITypeSystem#MainTypeModule">
            <summary>
            Gets the main type module.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.CustomAttributeParser">
            <summary>
            Parses and instantiates custom attributes in assembly metadata blobs.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.CustomAttributeParser.ATTRIBUTE_BLOB_PROLOGUE">
            <summary>
            The prologue id for a custom attribute blob.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.CustomAttributeParser.ATTRIBUTE_NULL_STRING_LEN">
            <summary>
            Length of a null string in a custom attribute blob.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.CustomAttributeParser.ATTRIBUTE_EMPTY_STRING_LEN">
            <summary>
            Length of an empty string in a custom attribute blob.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.CustomAttributeParser.Parse(System.Byte[],Mosa.Compiler.TypeSystem.RuntimeMethod)">
            <summary>
            Parses the specified attribute blob and instantiates the attribute.
            </summary>
            <param name="blob">The BLOB.</param>
            <param name="attributeCtor">The constructor of the attribute.</param>
            <returns>
            The fully instantiated and initialized attribute.
            </returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.CustomAttributeParser.ParseFixedArg(System.IO.BinaryReader,Mosa.Compiler.Metadata.Signatures.SigType)">
            <summary>
            Parses a fixed argument in an attribute blob definition.
            </summary>
            <param name="reader">The binary reader to read it From.</param>
            <param name="sigType">The signature type of the value to read.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.CustomAttributeParser.ParseSZArrayArg(System.IO.BinaryReader,Mosa.Compiler.Metadata.Signatures.SZArraySigType)">
            <summary>
            Parses an SZArray attribute value.
            </summary>
            <param name="reader">The binary reader used to read from the attribute blob.</param>
            <param name="sigType">Type of the SZArray.</param>
            <returns>
            An Array, which represents the SZArray definition.
            </returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.CustomAttributeParser.ParseElem(System.IO.BinaryReader,Mosa.Compiler.Metadata.Signatures.SigType)">
            <summary>
            Parses an elementary field, parameter or property definition.
            </summary>
            <param name="reader">The binary reader to read data From.</param>
            <param name="sigType">The signature type of the field, parameter or property to read.</param>
            <returns>
            An object, which represents the value read from the attribute blob.
            </returns>
            <exception cref="T:System.NotSupportedException"><paramref name="sigType"/> is not yet supported.</exception>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.CustomAttributeParser.ParseSerString(System.IO.BinaryReader)">
            <summary>
            Parses a string definition for an attribute field, parameter or property definition.
            </summary>
            <param name="reader">The binary reader to read From.</param>
            <returns>A string, which represents the value read.</returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.CustomAttributeParser.GetTypeFromSigType(Mosa.Compiler.Metadata.Signatures.SigType)">
            <summary>
            Gets the type from the signature type.
            </summary>
            <param name="sigType">The signature type.</param>
            <returns>The System.Type represented by the signature type.</returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.Generic.CilGenericField.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.RuntimeField,Mosa.Compiler.Metadata.Signatures.FieldSignature,Mosa.Compiler.TypeSystem.Generic.CilGenericType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.Generic.CilGenericField"/> class.
            </summary>
            <param name="module">The module.</param>
            <param name="genericField">The generic field.</param>
            <param name="signature">The signature.</param>
            <param name="declaringType">Type of the declaring.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.Generic.CilGenericMethod.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.TypeSystem.Cil.CilRuntimeMethod,Mosa.Compiler.Metadata.Signatures.MethodSignature,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.Generic.CilGenericMethod"/> class.
            </summary>
            <param name="module">The module.</param>
            <param name="genericMethod">The generic method.</param>
            <param name="signature">The signature.</param>
            <param name="declaringType">Type of the declaring.</param>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.Generic.CilGenericType.baseGenericType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.Generic.CilGenericType.signature">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.Generic.CilGenericType.genericArguments">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.Generic.CilGenericType.containsOpenGenericArguments">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.Generic.CilGenericType.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.Metadata.Signatures.GenericInstSigType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.Generic.CilGenericType"/> class.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="token">The token.</param>
            <param name="baseGenericType">Type of the base generic.</param>
            <param name="genericTypeInstanceSignature">The generic type instance signature.</param>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.Generic.CilGenericType.InstantiationModule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.Generic.CilGenericType.GenericArguments">
            <summary>
            Gets the generic arguments.
            </summary>
            <value>The generic arguments.</value>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.typeSystem">
            <summary>
            Holds the type system
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.metadataProvider">
            <summary>
            Holds the metadata provider
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.metadataModule">
            <summary>
            Holds the metadata module
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.types">
            <summary>
            Array of loaded runtime type descriptors.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.methods">
            <summary>
            Holds all loaded method definitions.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.typeSpecs">
            <summary>
            Array of loaded runtime typeSpec descriptors.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.methodSpecs">
            <summary>
            Holds all loaded method definitions.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.fields">
            <summary>
            Holds all loaded _stackFrameIndex definitions.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.memberRef">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.typeRef">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.genericParamConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.externals">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.strings">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.signatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.TypeModule.tableRows">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.#ctor(Mosa.Compiler.TypeSystem.ITypeSystem,Mosa.Compiler.Metadata.Loader.IMetadataModule)">
            <summary>
            Initializes static data members of the type loader.
            </summary>
            <param name="typeSystem">The type system.</param>
            <param name="metadataModule">The metadata module.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.RetrieveAllTableSizes">
            <summary>
            Computes the size of each table and stores it for faster lookup
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.GetTableRows(Mosa.Compiler.Metadata.TableType)">
            <summary>
            Gets the table rows.
            </summary>
            <param name="tokenType">Type of the token.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.GetMaxTokenValue(Mosa.Compiler.Metadata.TableType)">
            <summary>
            Get the last token for the table
            </summary>
            <param name="table">The table to lookup the token for</param>
            <returns>The last token inside the table</returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.GetString(Mosa.Compiler.Metadata.HeapIndexToken)">
            <summary>
            Loads the string from the heap table for stringIdx
            </summary>
            <param name="stringIdx">The string's index</param>
            <returns>The string at heap[stringIdx]</returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadTypes">
            <summary>
            Loads all types from the given metadata module.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadMethods(Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.Metadata.Token,Mosa.Compiler.Metadata.Token)">
            <summary>
            Loads all methods from the given metadata module.
            </summary>
            <param name="declaringType">The type, which declared the method.</param>
            <param name="first">The first method token to load.</param>
            <param name="last">The last method token to load (non-inclusive.)</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadParameters(Mosa.Compiler.TypeSystem.RuntimeMethod,Mosa.Compiler.Metadata.Token,Mosa.Compiler.Metadata.Token)">
            <summary>
            Loads the parameters.
            </summary>
            <param name="method">The method.</param>
            <param name="first">The first.</param>
            <param name="max">The max.</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadFields(Mosa.Compiler.TypeSystem.RuntimeType,Mosa.Compiler.Metadata.Token,Mosa.Compiler.Metadata.Token)">
            <summary>
            Loads all fields defined in the module.
            </summary>
            <param name="declaringType">The type, which declared the method.</param>
            <param name="first">The first field token to load.</param>
            <param name="last">The last field token to load (non-inclusive.)</param>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadInterfaces">
            <summary>
            Loads the interfaces.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadGenericInterfaces">
            <summary>
            Loads the generic interfaces.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadMemberReferences">
            <summary>
            Loads the interfaces.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadTypeReferences">
            <summary>
            Loads the interfaces.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadCustomAttributes">
            <summary>
            Loads all custom attributes from the assembly.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadGenericParams">
            <summary>
            Loads the generic param constraints.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadTypeSpecs">
            <summary>
            Loads the type specs.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.LoadExternals">
            <summary>
            Loads the externals.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.GetType(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the runtime type for a given metadata token.
            </summary>
            <param name="token">The token of the type to load. This can represent a typeref, typedef or typespec token.</param>
            <returns>The runtime type of the specified token.</returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetAllTypes">
            <summary>
            Gets all types from module.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetType(System.String,System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="nameSpace">The name space.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetType(System.String)">
            <summary>
            Gets the runtime type for the given type name and namespace
            </summary>
            <param name="fullname">The fullname.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetType(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the runtime type for a given metadata token.
            </summary>
            <param name="token">The token of the type to load. This can represent a typeref, typedef or typespec token.</param>
            <returns>The runtime type of the specified token.</returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetField(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the field definition identified by the given token in the scope.
            </summary>
            <param name="token">The token of the field to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetMethod(Mosa.Compiler.Metadata.Token)">
            <summary>
            Retrieves the method definition identified by the given token in the scope.
            </summary>
            <param name="token">The token of the method to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetMethod(Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the method.
            </summary>
            <param name="token">The token.</param>
            <param name="callingType">Type of the calling.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetOpenGeneric(Mosa.Compiler.TypeSystem.RuntimeType)">
            <summary>
            Gets the open generic.
            </summary>
            <param name="baseGenericType">Type of the base generic.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#GetExternalName(Mosa.Compiler.Metadata.Token)">
            <summary>
            Gets the name of the external.
            </summary>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.TypeModule.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#TypeSystem">
            <summary>
            Gets the type system.
            </summary>
            <value>The type system.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#MetadataModule">
            <summary>
            Gets the metadata module.
            </summary>
            <value>The metadata module.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.TypeModule.Mosa#Compiler#TypeSystem#ITypeModule#Name">
            <summary>
            Gets the module's name.
            </summary>
            <value>The module's name.</value>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.RuntimeAttribute">
            <summary>
            Represents an attribute in runtime type information.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeAttribute.typeModule">
            <summary>
            Holds the module from which this object originated
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeAttribute.ctor">
            <summary>
            Holds the ctor of the attribute type to invoke.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeAttribute.ctorMethod">
            <summary>
            Holds the ctor method of the attribute type.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeAttribute.blobIndex">
            <summary>
            Holds the blob index
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeAttribute.blob">
            <summary>
            Holds the blob
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeAttribute.#ctor(Mosa.Compiler.TypeSystem.ITypeModule,Mosa.Compiler.Metadata.Token,Mosa.Compiler.TypeSystem.RuntimeMethod,Mosa.Compiler.Metadata.HeapIndexToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.RuntimeAttribute"/> class.
            </summary>
            <param name="typeModule">The type module.</param>
            <param name="ctor">The ctor.</param>
            <param name="ctorMethod">The ctor method.</param>
            <param name="blobIndex">Index of the blob.</param>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeAttribute.TypeModule">
            <summary>
            Retrieves the module from which this object originated
            </summary>
            <value>The type module.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeAttribute.Type">
            <summary>
            Gets the runtime type.
            </summary>
            <value>The runtime type.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeAttribute.CtorMethod">
            <summary>
            Gets the ctor method.
            </summary>
            <value>The ctor method.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeAttribute.BlobIndex">
            <summary>
            Gets the index of the blob.
            </summary>
            <value>The index of the blob.</value>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeAttribute.Blob">
            <summary>
            Gets the blob.
            </summary>
            <value>The blob.</value>
        </member>
        <member name="T:Mosa.Compiler.TypeSystem.RuntimeParameter">
            <summary>
            Holds method parameters for reflection and compilation.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeParameter.attributes">
            <summary>
            Holds the attributes of the parameter.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeParameter.name">
            <summary>
            Cached name of the parameter. This value is filled upon first request of the name.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeParameter.token">
            <summary>
            Holds the parameter token.
            </summary>
        </member>
        <member name="F:Mosa.Compiler.TypeSystem.RuntimeParameter.position">
            <summary>
            Holds the parameter index.
            </summary>
        </member>
        <member name="M:Mosa.Compiler.TypeSystem.RuntimeParameter.#ctor(System.String,System.Int32,Mosa.Compiler.Metadata.ParameterAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Mosa.Compiler.TypeSystem.RuntimeParameter"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="position">The position.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeParameter.Attributes">
            <summary>
            Returns the parameter flags.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeParameter.IsIn">
            <summary>
            Determines if this is an input parameter.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeParameter.IsOut">
            <summary>
            Determines if this is an output parameter.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeParameter.Name">
            <summary>
            Retrieves the name of the parameter.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeParameter.MetadataToken">
            <summary>
            Retrieves the metadata token of this parameter.
            </summary>
        </member>
        <member name="P:Mosa.Compiler.TypeSystem.RuntimeParameter.Position">
            <summary>
            Retrieves the parameter position.
            </summary>
        </member>
    </members>
</doc>
