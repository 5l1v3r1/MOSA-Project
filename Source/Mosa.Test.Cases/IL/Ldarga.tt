<#@ include file="../TemplateLibrary.txt" #>

using System;
using System.Collections.Generic;
using System.Text;
using MbUnit.Framework;

using Mosa.Test.Runtime.CompilerFramework;

namespace Mosa.Test.Cases.IL
{
	[TestFixture]
	public class Ldarga : TestCompilerAdapter
	{
		public Ldarga()
		{
			settings.AddReference("Mosa.Test.Collection.dll");
		}

		#region CheckValue
		<# foreach (KeyValuePair<string, string> number in NumbersWithChar) { #>

		[Column(0, 1, 2, <#= number.Key #>.MinValue, <#= number.Key #>.MaxValue)]
		[Test]
		public void LdargaCheckValue<#= number.Value #>(<#= number.Key #> a)
		{
			Assert.IsTrue(Run<bool>("Mosa.Test.Collection", "LdargaTests", "LdargaCheckValue<#= number.Value #>", a, a));
		}
		<# } #>

		#endregion

		#region ChangeValue
		<# foreach (KeyValuePair<string, string> number in Numbers) { #>

		[Column(0, 1, 2, <#= number.Key #>.MinValue, <#= number.Key #>.MaxValue)]
		[Test]
		public void LdargaChangeValue<#= number.Value #>(<#= number.Key #> a)
		{
			Assert.IsTrue(Run<bool>("Mosa.Test.Collection", "LdargaTests", "LdargaChangeValue<#= number.Value #>", a, a));
		}
		<# } #>

		#endregion
	}
}
